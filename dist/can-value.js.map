{"version":3,"file":"can-value.js","sources":["../node_modules/can-simple-observable/key/key.js","../node_modules/can-value/can-value.js"],"sourcesContent":["var canKey = require(\"can-key\");\nvar canKeyUtils = require(\"can-key/utils\");\nvar canReflect = require(\"can-reflect\");\nvar Observation = require(\"can-observation\");\n\n//!steal-remove-start\nif (process.env.NODE_ENV !== 'production') {\n\tvar canReflectDependencies = require(\"can-reflect-dependencies\");\n}\n//!steal-remove-end\n\nmodule.exports = function keyObservable(root, keyPath) {\n\tvar keyPathParts = canKeyUtils.parts(keyPath);\n\tvar lastIndex = keyPathParts.length - 1;\n\n\t// Some variables used to build the dependency/mutation graph\n\t//!steal-remove-start\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tvar lastKey;// This stores the last part of the keyPath, e.g. “key” in “outer.inner.key”\n\t\tvar lastParent;// This stores the object that the last key is on, e.g. “outer.inner” in outer: {inner: {\"key\": \"value\"}}\n\t}\n\t//!steal-remove-end\n\n\tvar observation = new Observation(function() {\n\t\tvar value;\n\n\t\t// This needs to be walked every time because the objects along the key path might change\n\t\tcanKey.walk(root, keyPathParts, function(keyData, i) {\n\t\t\tif (i === lastIndex) {\n\t\t\t\t//!steal-remove-start\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\t\t// observation is mutating keyData.parent\n\t\t\t\t\tif (lastParent && (keyData.key !== lastKey || keyData.parent !== lastParent)) {\n\t\t\t\t\t\tcanReflectDependencies.deleteMutatedBy(lastParent, lastKey, observation);\n\t\t\t\t\t}\n\t\t\t\t\tlastKey = keyData.key;\n\t\t\t\t\tlastParent = keyData.parent;\n\t\t\t\t\tcanReflectDependencies.addMutatedBy(lastParent, lastKey, observation);\n\t\t\t\t}\n\t\t\t\t//!steal-remove-end\n\n\t\t\t\tvalue = keyData.value;\n\t\t\t}\n\t\t});\n\n\t\treturn value;\n\t});\n\n\t// Function for setting the value\n\tvar valueSetter = function(newVal) {\n\t\tcanKey.set(root, keyPathParts, newVal);\n\t};\n\n\t// The `value` property getter & setter\n\tObject.defineProperty(observation, \"value\", {\n\t\tget: observation.get,\n\t\tset: valueSetter\n\t});\n\n\tvar symbolsToAssign = {\n\t\t\"can.setValue\": valueSetter\n\t};\n\n\t//!steal-remove-start\n\tif (process.env.NODE_ENV !== 'production') {\n\n\t\t// Debug name\n\t\tsymbolsToAssign[\"can.getName\"] = function getName() {\n\t\t\tvar objectName = canReflect.getName(root);\n\t\t\treturn \"keyObservable<\" + objectName + \".\" + keyPath + \">\";\n\t\t};\n\n\t\t// Register what this observable changes\n\t\tsymbolsToAssign[\"can.getWhatIChange\"] = function getWhatIChange() {\n\t\t\tvar m = new Map();\n\t\t\tvar s = new Set();\n\t\t\ts.add(lastKey);\n\t\t\tm.set(lastParent, s);\n\t\t\treturn {\n\t\t\t\tmutate: {\n\t\t\t\t\tkeyDependencies: m\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\t//!steal-remove-end\n\n\treturn canReflect.assignSymbols(observation, symbolsToAssign);\n}\n","\"use strict\";\nvar canKey = require(\"can-key\");\nvar canReflect = require(\"can-reflect\");\nvar keyObservable = require(\"can-simple-observable/key/key\");\nvar namespace = require(\"can-namespace\");\nvar Observation = require(\"can-observation\");\nvar SimpleObservable = require(\"can-simple-observable\");\n\nmodule.exports = namespace.value = {\n\tbind: function(object, keyPath) {\n\t\treturn keyObservable(object, keyPath);\n\t},\n\n\tfrom: function(object, keyPath) {\n\t\tvar observationFunction = function() {\n\t\t\treturn canKey.get(object, keyPath);\n\t\t};\n\n\t\t//!steal-remove-start\n\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tvar objectName = canReflect.getName(object);\n\t\t\tObject.defineProperty(observationFunction, \"name\", {\n\t\t\t\tvalue: \"ValueFrom<\" + objectName + \".\" + keyPath + \">\"\n\t\t\t});\n\t\t}\n\t\t//!steal-remove-end\n\n\t\treturn new Observation(observationFunction);\n\t},\n\n\treturnedBy: function(observationFunction) {\n\t\treturn new Observation(observationFunction);\n\t},\n\n\tto: function(object, keyPath) {\n\t\tvar observable = keyObservable(object, keyPath);\n\n\t\t//!steal-remove-start\n\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tcanReflect.assignSymbols(observable.onDependencyChange, {\n\t\t\t\t\"can.getChangesDependencyRecord\": function getChangesDependencyRecord() {\n\t\t\t\t\t// can-simple-observable/key/ creates an observation that walks along\n\t\t\t\t\t// the keyPath. In doing so, it implicitly registers the objects and\n\t\t\t\t\t// keys along the path as mutators of the observation; this means\n\t\t\t\t\t// getDependencyDataOf(...an object and key along the path) returns\n\t\t\t\t\t// whatIChange.derive.valueDependencies = [observable], which is not\n\t\t\t\t\t// true! The observable does not derive its value from the objects\n\t\t\t\t\t// along the keyPath. By implementing getChangesDependencyRecord and\n\t\t\t\t\t// returning undefined, calls to can.getWhatIChange() for any objects\n\t\t\t\t\t// along the keyPath will not include the observable.\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t//!steal-remove-end\n\n\t\tvar symbolsToAssign = {\n\t\t\t// Remove the getValue symbol so the observable is only a setter\n\t\t\t\"can.getValue\": null\n\t\t};\n\n\t\t//!steal-remove-start\n\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tsymbolsToAssign[\"can.getValueDependencies\"] = function getValueDependencies() {\n\t\t\t\t// Normally, getDependencyDataOf(observable) would include\n\t\t\t\t// whatChangesMe.derive.keyDependencies, and it would contain\n\t\t\t\t// the object and anything along keyPath. This symbol returns\n\t\t\t\t// undefined because this observable does not derive its value\n\t\t\t\t// from the object or anything along the keyPath, it only\n\t\t\t\t// mutates the last object in the keyPath.\n\t\t\t};\n\t\t}\n\t\t//!steal-remove-end\n\n\t\treturn canReflect.assignSymbols(observable, symbolsToAssign);\n\t},\n\n\twith: function(initialValue) {\n\t\treturn new SimpleObservable(initialValue);\n\t}\n};\n"],"names":["process","env","NODE_ENV","canReflectDependencies","require$$0","root","keyPath","keyPathParts","canKeyUtils","parts","lastIndex","length","lastKey","lastParent","observation","Observation","value","canKey","walk","keyData","i","key","parent","deleteMutatedBy","addMutatedBy","valueSetter","newVal","set","Object","defineProperty","get","symbolsToAssign","can.setValue","canReflect","getName","m","Map","s","Set","add","mutate","keyDependencies","assignSymbols","namespace","bind","object","keyObservable","from","observationFunction","objectName","returnedBy","to","observable","onDependencyChange","can.getChangesDependencyRecord","can.getValue","with","initialValue","SimpleObservable"],"mappings":"0kCAMA,GAA6B,eAAzBA,UAAQC,IAAIC,SACf,IAAIC,uBAAyBC,eAI9B,QAAiB,SAAuBC,EAAMC,GAC7C,IAAIC,EAAeC,YAAYC,MAAMH,GACjCI,EAAYH,EAAaI,OAAS,EAItC,GAA6B,eAAzBX,UAAQC,IAAIC,SACf,IAAIU,EACAC,EAIL,IAAIC,EAAc,IAAIC,YAAY,WACjC,IAAIC,EAqBJ,OAlBAC,OAAOC,KAAKb,EAAME,EAAc,SAASY,EAASC,GAC7CA,IAAMV,IAEoB,eAAzBV,UAAQC,IAAIC,YAEXW,GAAeM,EAAQE,MAAQT,GAAWO,EAAQG,SAAWT,GAChEV,uBAAuBoB,gBAAgBV,EAAYD,EAASE,GAE7DF,EAAUO,EAAQE,IAClBR,EAAaM,EAAQG,OACrBnB,uBAAuBqB,aAAaX,EAAYD,EAASE,IAI1DE,EAAQG,EAAQH,SAIXA,IAIJS,EAAc,SAASC,GAC1BT,OAAOU,IAAItB,EAAME,EAAcmB,IAIhCE,OAAOC,eAAef,EAAa,QAAS,CAC3CgB,IAAKhB,EAAYgB,IACjBH,IAAKF,IAGN,IAAIM,EAAkB,CACrBC,eAAgBP,GA2BjB,MAvB6B,eAAzBzB,UAAQC,IAAIC,WAGf6B,EAAgB,eAAiB,WAEhC,MAAO,iBADUE,WAAWC,QAAQ7B,GACG,IAAMC,EAAU,KAIxDyB,EAAgB,sBAAwB,WACvC,IAAII,EAAI,IAAIC,IACRC,EAAI,IAAIC,IAGZ,OAFAD,EAAEE,IAAI3B,GACNuB,EAAER,IAAId,EAAYwB,GACX,CACNG,OAAQ,CACPC,gBAAiBN,MAOdF,WAAWS,cAAc5B,EAAaiB,aC/E7BY,UAAU3B,MAAQ,CAClC4B,KAAM,SAASC,EAAQvC,GACtB,OAAOwC,IAAcD,EAAQvC,IAG9ByC,KAAM,SAASF,EAAQvC,GACtB,IAAI0C,EAAsB,WACzB,OAAO/B,OAAOa,IAAIe,EAAQvC,IAI3B,GAA6B,eAAzBN,UAAQC,IAAIC,SAA2B,CAC1C,IAAI+C,EAAahB,WAAWC,QAAQW,GACpCjB,OAAOC,eAAemB,EAAqB,OAAQ,CAClDhC,MAAO,aAAeiC,EAAa,IAAM3C,EAAU,MAKrD,OAAO,IAAIS,YAAYiC,IAGxBE,WAAY,SAASF,GACpB,OAAO,IAAIjC,YAAYiC,IAGxBG,GAAI,SAASN,EAAQvC,GACpB,IAAI8C,EAAaN,IAAcD,EAAQvC,GAGV,eAAzBN,UAAQC,IAAIC,UACf+B,WAAWS,cAAcU,EAAWC,mBAAoB,CACvDC,iCAAkC,eAepC,IAAIvB,EAAkB,CAErBwB,eAAgB,MAgBjB,MAZ6B,eAAzBvD,UAAQC,IAAIC,WACf6B,EAAgB,4BAA8B,cAWxCE,WAAWS,cAAcU,EAAYrB,IAG7CyB,KAAM,SAASC,GACd,OAAO,IAAIC,iBAAiBD"}