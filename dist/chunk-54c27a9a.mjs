import"./chunk-5f1245ff.mjs";import{a as canSymbol}from"./chunk-b37d91a1.mjs";import{a as canReflect}from"./chunk-7e0220de.mjs";var behaviorsMap={};function behavior(e,r){"string"!=typeof e&&(r=e,e=void 0);var o=function(o){var a=function(){};Object.defineProperty(a,"name",{value:e,configurable:!0}),a.prototype=o;var i=new a,t="function"==typeof r?r.apply(i,arguments):r;for(var n in t)t.hasOwnProperty(n)?Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n)):i[n]=t[n];return i.__behaviorName=e,i};return e&&(o.behaviorName=e,behaviorsMap[e]=o),o.isBehavior=!0,o}behavior.map=behaviorsMap;var behavior_1=behavior,base=behavior_1("base",function(e){var r;return{id:function(e){if(this.queryLogic)return canReflect.getIdentity(e,this.queryLogic.schema);if(this.idProp)return e[this.idProp];throw new Error("can-connect/base/base - Please add a queryLogic option.")},listQuery:function(e){return e[this.listQueryProp]},listQueryProp:canSymbol.for("can.listQuery"),init:function(){},get queryLogic(){return r||(e.queryLogic?e.queryLogic:e.algebra?e.algebra:void 0)},set queryLogic(e){r=e}}});export{behavior_1 as a,base as b};
//# sourceMappingURL=chunk-54c27a9a.js.map
