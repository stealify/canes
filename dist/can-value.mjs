import{a as process$1}from"./chunk-bacf0c54.mjs";import"./chunk-b270b042.mjs";import{b as canKeyUtils}from"./chunk-b09dcf0e.mjs";import"./chunk-5f1245ff.mjs";import"./chunk-7dfeb1df.mjs";import"./chunk-0c313990.mjs";import{a as canKey}from"./chunk-442dee42.mjs";import{a as canReflect}from"./chunk-7e0220de.mjs";import{a as Observation}from"./chunk-c1d5d21e.mjs";import{a as canReflectDeps}from"./chunk-0cc812f8.mjs";import"./chunk-805ffcb4.mjs";import"./chunk-660b4975.mjs";import{a as namespace}from"./chunk-3b4c7b38.mjs";import{a as SimpleObservable}from"./chunk-65b62c71.mjs";import"./chunk-b37d91a1.mjs";import"./chunk-849fe8d8.mjs";import"./chunk-f0afc07a.mjs";import"./chunk-46f90238.mjs";import"./chunk-862b179d.mjs";import"./chunk-585d4076.mjs";import"./chunk-bd824939.mjs";import"./chunk-75bea8d8.mjs";import"./chunk-eae5b219.mjs";import"./chunk-fa6b878a.mjs";import"./chunk-79943599.mjs";import"./chunk-2c9f11a8.mjs";import"./chunk-b1806013.mjs";import"./chunk-a9b254be.mjs";import"./chunk-12ed728f.mjs";import"./chunk-8d049599.mjs";import"./chunk-d2889630.mjs";import"./chunk-8811d387.mjs";import"./chunk-825526fa.mjs";if("production"!==process$1.env.NODE_ENV)var canReflectDependencies=canReflectDeps;var key=function(e,n){var c=canKeyUtils.parts(n),t=c.length-1;if("production"!==process$1.env.NODE_ENV)var r,a;var o=new Observation(function(){var n;return canKey.walk(e,c,function(e,c){c===t&&("production"!==process$1.env.NODE_ENV&&(!a||e.key===r&&e.parent===a||canReflectDependencies.deleteMutatedBy(a,r,o),r=e.key,a=e.parent,canReflectDependencies.addMutatedBy(a,r,o)),n=e.value)}),n}),s=function(n){canKey.set(e,c,n)};Object.defineProperty(o,"value",{get:o.get,set:s});var u={"can.setValue":s};return"production"!==process$1.env.NODE_ENV&&(u["can.getName"]=function(){return"keyObservable<"+canReflect.getName(e)+"."+n+">"},u["can.getWhatIChange"]=function(){var e=new Map,n=new Set;return n.add(r),e.set(a,n),{mutate:{keyDependencies:e}}}),canReflect.assignSymbols(o,u)},canValue=namespace.value={bind:function(e,n){return key(e,n)},from:function(e,n){var c=function(){return canKey.get(e,n)};if("production"!==process$1.env.NODE_ENV){var t=canReflect.getName(e);Object.defineProperty(c,"name",{value:"ValueFrom<"+t+"."+n+">"})}return new Observation(c)},returnedBy:function(e){return new Observation(e)},to:function(e,n){var c=key(e,n);"production"!==process$1.env.NODE_ENV&&canReflect.assignSymbols(c.onDependencyChange,{"can.getChangesDependencyRecord":function(){}});var t={"can.getValue":null};return"production"!==process$1.env.NODE_ENV&&(t["can.getValueDependencies"]=function(){}),canReflect.assignSymbols(c,t)},with:function(e){return new SimpleObservable(e)}};export default canValue;
//# sourceMappingURL=can-value.js.map
