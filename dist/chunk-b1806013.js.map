{"version":3,"file":"chunk-b1806013.js","sources":["../node_modules/can-define-lazy-value/define-lazy-value.js"],"sourcesContent":["\"use strict\";\n/**\n * @module {function} can-define-lazy-value\n * @parent can-js-utilities\n * @collection can-infrastructure\n * @package ./package.json\n * @signature `defineLazyValue(obj, prop, fn, writable)`\n *\n * Use Object.defineProperty to define properties whose values will be created lazily when they are first read.\n *\n * ```js\n * var _id = 1;\n * function getId() {\n *     return _id++;\n * }\n *\n * function MyObj(name) {\n *     this.name = name;\n * }\n *\n * defineLazyValue(MyObj.prototype, 'id', getId);\n *\n * var obj1 = new MyObj('obj1');\n * var obj2 = new MyObj('obj2');\n *\n * console.log( obj2 ); // -> { name: \"obj2\" }\n * console.log( obj1 ); // -> { name: \"obj1\" }\n *\n * // the first `id` read will get id `1`\n * console( obj2.id ); // -> 1\n * console( obj1.id ); // -> 2\n *\n * console.log( obj2 ); // -> { name: \"obj2\", id: 1 }\n * console.log( obj1 ); // -> { name: \"obj1\", id: 2 }\n *\n * ```\n *\n * @param {Object} object The object to add the property to.\n * @param {String} prop   The name of the property.\n * @param {Function} fn   A function to get the value the property should be set to.\n * @param {boolean} writable   Whether the field should be writable (false by default).\n */\nmodule.exports = function defineLazyValue(obj, prop, initializer, writable) {\n\tObject.defineProperty(obj, prop, {\n\t\tconfigurable: true,\n\t\tget: function() {\n\t\t\t// make the property writable\n\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\tvalue: undefined,\n\t\t\t\twritable: true\n\t\t\t});\n\n\t\t\t// get the value from the initializer function\n\t\t\tvar value = initializer.call(this, obj, prop);\n\n\t\t\t// redefine the property to the value property\n\t\t\t// and reset the writable flag\n\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: !!writable\n\t\t\t});\n\n\t\t\t// return the value\n\t\t\treturn value;\n\t\t},\n\t\tset: function(value){\n\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: !!writable\n\t\t\t});\n\n\t\t\treturn value;\n\t\t}\n\t});\n};\n"],"names":["obj","prop","initializer","writable","Object","defineProperty","configurable","get","this","value","undefined","call","set"],"mappings":"oBA0CiB,SAAyBA,EAAKC,EAAMC,EAAaC,GACjEC,OAAOC,eAAeL,EAAKC,EAAM,CAChCK,cAAc,EACdC,IAAK,WAEJH,OAAOC,eAAeG,KAAMP,EAAM,CACjCQ,WAAOC,EACPP,UAAU,IAIX,IAAIM,EAAQP,EAAYS,KAAKH,KAAMR,EAAKC,GAUxC,OANAG,OAAOC,eAAeG,KAAMP,EAAM,CACjCQ,MAAOA,EACPN,WAAYA,IAINM,GAERG,IAAK,SAASH,GAMb,OALAL,OAAOC,eAAeG,KAAMP,EAAM,CACjCQ,MAAOA,EACPN,WAAYA,IAGNM"}