{"version":3,"file":"chunk-bef7c5be.js","sources":["../node_modules/can-simple-map/can-simple-map.js"],"sourcesContent":["\"use strict\";\nvar Construct = require(\"can-construct\");\nvar eventQueue = require(\"can-event-queue/map/map\");\nvar queues = require(\"can-queues\");\nvar ObservationRecorder = require(\"can-observation-recorder\");\nvar canReflect = require(\"can-reflect\");\nvar dev = require(\"can-log/dev/dev\");\nvar canSymbol = require(\"can-symbol\");\n\n// Ensure the \"obj\" passed as an argument has an object on @@can.meta\nvar ensureMeta = function ensureMeta(obj) {\n\tvar metaSymbol = canSymbol.for(\"can.meta\");\n\tvar meta = obj[metaSymbol];\n\n\tif (!meta) {\n\t\tmeta = {};\n\t\tcanReflect.setKeyValue(obj, metaSymbol, meta);\n\t}\n\n\treturn meta;\n};\n\n// this is a very simple can-map like object\nvar SimpleMap = Construct.extend(\"SimpleMap\",\n\t{\n\t\t// ### setup\n\t\t// A setup function for the instantiation of a simple-map.\n\t\tsetup: function(initialData){\n\t\t\tthis._data = {};\n\t\t\tif(initialData && typeof initialData === \"object\") {\n\t\t\t\tthis.attr(initialData);\n\t\t\t}\n\t\t},\n\t\t// ### attr\n\t\t// The main get/set interface simple-map.\n\t\t// Either sets or gets one or more properties depending on how it is called.\n\t\tattr: function(prop, value) {\n\t\t\tvar self = this;\n\n\t\t\tif(arguments.length === 0 ) {\n\t\t\t\tObservationRecorder.add(this,\"can.keys\");\n\t\t\t\tvar data = {};\n\t\t\t\tcanReflect.eachKey(this._data, function(value, prop){\n\t\t\t\t\tObservationRecorder.add(this, prop);\n\t\t\t\t\tdata[prop] = value;\n\t\t\t\t}, this);\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\telse if(arguments.length > 1) {\n\t\t\t\tvar had = this._data.hasOwnProperty(prop);\n\t\t\t\tvar old = this._data[prop];\n\t\t\t\tthis._data[prop] = value;\n\t\t\t\tif(old !== value) {\n\n\n\t\t\t\t\t//!steal-remove-start\n\t\t\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\t\t\tif (typeof this._log === \"function\") {\n\t\t\t\t\t\t\tthis._log(prop, value, old);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//!steal-remove-end\n\n\t\t\t\t\tvar dispatched = {\n\t\t\t\t\t\tkeyChanged: !had ? prop : undefined,\n\t\t\t\t\t\ttype: prop\n\t\t\t\t\t};\n\t\t\t\t\t//!steal-remove-start\n\t\t\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\t\t\tdispatched = {\n\t\t\t\t\t\t\tkeyChanged: !had ? prop : undefined,\n\t\t\t\t\t\t\ttype: prop,\n\t\t\t\t\t\t\treasonLog: [ canReflect.getName(this) + \"'s\", prop, \"changed to\", value, \"from\", old ],\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t//!steal-remove-end\n\n\t\t\t\t\tthis.dispatch(dispatched, [value, old]);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// 1 argument\n\t\t\telse if(typeof prop === 'object') {\n\t\t\t\tqueues.batch.start();\n\t\t\t\tcanReflect.eachKey(prop, function(value, key) {\n\t\t\t\t\tself.attr(key, value);\n\t\t\t\t});\n\t\t\t\tqueues.batch.stop();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(prop !== \"constructor\") {\n\t\t\t\t\tObservationRecorder.add(this, prop);\n\t\t\t\t\treturn this._data[prop];\n\t\t\t\t}\n\n\t\t\t\treturn this.constructor;\n\t\t\t}\n\t\t},\n\t\tserialize: function(){\n\t\t\treturn canReflect.serialize(this, Map);\n\t\t},\n\t\tget: function(){\n\t\t\treturn this.attr.apply(this, arguments);\n\t\t},\n\t\tset: function(){\n\t\t\treturn this.attr.apply(this, arguments);\n\t\t},\n\t\t// call `.log()` to log all property changes\n\t\t// pass a single property to only get logs for said property, e.g: `.log(\"foo\")`\n\t\tlog: function(key) {\n\t\t\t//!steal-remove-start\n\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\tvar quoteString = function quoteString(x) {\n\t\t\t\t\treturn typeof x === \"string\" ? JSON.stringify(x) : x;\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar meta = ensureMeta(this);\n\t\t\tmeta.allowedLogKeysSet = meta.allowedLogKeysSet || new Set();\n\n\t\t\tif (key) {\n\t\t\t\tmeta.allowedLogKeysSet.add(key);\n\t\t\t}\n\n\t\t\tthis._log = function(prop, current, previous, log) {\n\t\t\t\tif (key && !meta.allowedLogKeysSet.has(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdev.log(\n\t\t\t\t\tcanReflect.getName(this),\n\t\t\t\t\t\"\\n key \", quoteString(prop),\n\t\t\t\t\t\"\\n is  \", quoteString(current),\n\t\t\t\t\t\"\\n was \", quoteString(previous)\n\t\t\t\t);\n\t\t\t};\n\t\t\t//!steal-remove-end\n\t\t}\n\t}\n);\n\neventQueue(SimpleMap.prototype);\n\nvar simpleMapProto = {\n\t// -type-\n\t\"can.isMapLike\": true,\n\t\"can.isListLike\": false,\n\t\"can.isValueLike\": false,\n\n\t// -get/set-\n\t\"can.getKeyValue\": SimpleMap.prototype.get,\n\t\"can.setKeyValue\": SimpleMap.prototype.set,\n\t\"can.deleteKeyValue\": function(prop) {\n\t\tvar dispatched;\n\t\tif( this._data.hasOwnProperty(prop) ) {\n\t\t\tvar old = this._data[prop];\n\t\t\tdelete this._data[prop];\n\n\t\t\t//!steal-remove-start\n\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\tif (typeof this._log === \"function\") {\n\t\t\t\t\tthis._log(prop, undefined, old);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//!steal-remove-end\n\t\t\tdispatched = {\n\t\t\t\tkeyChanged: prop,\n\t\t\t\ttype: prop\n\t\t\t};\n\t\t\t//!steal-remove-start\n\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\tdispatched = {\n\t\t\t\t\tkeyChanged: prop,\n\t\t\t\t\ttype: prop,\n\t\t\t\t\treasonLog: [ canReflect.getName(this) + \"'s\", prop, \"deleted\", old ]\n\t\t\t\t};\n\t\t\t}\n\t\t\t//!steal-remove-end\n\t\t\tthis.dispatch(dispatched, [undefined, old]);\n\t\t}\n\t},\n\n\n\t// -shape\n\t\"can.getOwnEnumerableKeys\": function(){\n\t\tObservationRecorder.add(this, 'can.keys');\n\t\treturn Object.keys(this._data);\n\t},\n\n\t// -shape get/set-\n\t\"can.assignDeep\": function(source){\n\t\tqueues.batch.start();\n\t\t// TODO: we should probably just throw an error instead of cleaning\n\t\tcanReflect.assignMap(this, source);\n\t\tqueues.batch.stop();\n\t},\n\t\"can.updateDeep\": function(source){\n\t\tqueues.batch.start();\n\t\t// TODO: we should probably just throw an error instead of cleaning\n\t\tcanReflect.updateMap(this, source);\n\t\tqueues.batch.stop();\n\t},\n\t\"can.keyHasDependencies\": function(key) {\n\t\treturn false;\n\t},\n\t\"can.getKeyDependencies\": function(key) {\n\t\treturn undefined;\n\t},\n\t\"can.hasOwnKey\": function(key){\n\t\treturn this._data.hasOwnProperty(key);\n\t}\n};\n\n//!steal-remove-start\nif (process.env.NODE_ENV !== 'production') {\n\tsimpleMapProto[\"can.getName\"] = function() {\n\t\treturn canReflect.getName(this.constructor) + \"{}\";\n\t};\n}\n//!steal-remove-end\ncanReflect.assignSymbols(SimpleMap.prototype,simpleMapProto);\n\n// Setup other symbols\n\n\nmodule.exports = SimpleMap;\n"],"names":["ensureMeta","obj","metaSymbol","canSymbol","for","meta","canReflect","setKeyValue","SimpleMap","Construct","extend","setup","initialData","this","_data","attr","prop","value","self","arguments","length","ObservationRecorder","add","data","eachKey","had","hasOwnProperty","old","process","env","NODE_ENV","_log","dispatched","keyChanged","undefined","type","reasonLog","getName","dispatch","constructor","queues","batch","start","key","stop","serialize","Map","get","apply","set","log","quoteString","x","JSON","stringify","allowedLogKeysSet","Set","current","previous","has","dev","eventQueue","prototype","simpleMapProto","can.isMapLike","can.isListLike","can.isValueLike","can.getKeyValue","can.setKeyValue","can.deleteKeyValue","can.getOwnEnumerableKeys","Object","keys","can.assignDeep","source","assignMap","can.updateDeep","updateMap","can.keyHasDependencies","can.getKeyDependencies","can.hasOwnKey","assignSymbols"],"mappings":"yfAUA,IAAIA,WAAa,SAAoBC,GACpC,IAAIC,EAAaC,UAAUC,IAAI,YAC3BC,EAAOJ,EAAIC,GAOf,OALKG,IACJA,EAAO,GACPC,WAAWC,YAAYN,EAAKC,EAAYG,IAGlCA,GAIJG,UAAYC,UAAUC,OAAO,YAChC,CAGCC,MAAO,SAASC,GACfC,KAAKC,MAAQ,GACVF,GAAsC,iBAAhBA,GACxBC,KAAKE,KAAKH,IAMZG,KAAM,SAASC,EAAMC,GACpB,IAAIC,EAAOL,KAEX,GAAwB,IAArBM,UAAUC,OAAe,CAC3BC,oBAAoBC,IAAIT,KAAK,YAC7B,IAAIU,EAAO,GAKX,OAJAjB,WAAWkB,QAAQX,KAAKC,MAAO,SAASG,EAAOD,GAC9CK,oBAAoBC,IAAIT,KAAMG,GAC9BO,EAAKP,GAAQC,GACXJ,MACIU,EAEH,GAAGJ,UAAUC,OAAS,EAAG,CAC7B,IAAIK,EAAMZ,KAAKC,MAAMY,eAAeV,GAChCW,EAAMd,KAAKC,MAAME,GAErB,GADAH,KAAKC,MAAME,GAAQC,EAChBU,IAAQV,EAAO,CAIY,eAAzBW,UAAQC,IAAIC,UACU,mBAAdjB,KAAKkB,MACflB,KAAKkB,KAAKf,EAAMC,EAAOU,GAKzB,IAAIK,EAAa,CAChBC,WAAaR,OAAaS,EAAPlB,EACnBmB,KAAMnB,GAGsB,eAAzBY,UAAQC,IAAIC,WACfE,EAAa,CACZC,WAAaR,OAAaS,EAAPlB,EACnBmB,KAAMnB,EACNoB,UAAW,CAAE9B,WAAW+B,QAAQxB,MAAQ,KAAMG,EAAM,aAAcC,EAAO,OAAQU,KAKnFd,KAAKyB,SAASN,EAAY,CAACf,EAAOU,SAK/B,CAAA,GAAmB,iBAATX,EAQd,MAAY,gBAATA,GACFK,oBAAoBC,IAAIT,KAAMG,GACvBH,KAAKC,MAAME,IAGZH,KAAK0B,YAZZC,OAAOC,MAAMC,QACbpC,WAAWkB,QAAQR,EAAM,SAASC,EAAO0B,GACxCzB,EAAKH,KAAK4B,EAAK1B,KAEhBuB,OAAOC,MAAMG,SAWfC,UAAW,WACV,OAAOvC,WAAWuC,UAAUhC,KAAMiC,MAEnCC,IAAK,WACJ,OAAOlC,KAAKE,KAAKiC,MAAMnC,KAAMM,YAE9B8B,IAAK,WACJ,OAAOpC,KAAKE,KAAKiC,MAAMnC,KAAMM,YAI9B+B,IAAK,SAASP,GAEb,GAA6B,eAAzBf,UAAQC,IAAIC,SACf,IAAIqB,EAAc,SAAqBC,GACtC,MAAoB,iBAANA,EAAiBC,KAAKC,UAAUF,GAAKA,GAGrD,IAAI/C,EAAOL,WAAWa,MACtBR,EAAKkD,kBAAoBlD,EAAKkD,mBAAqB,IAAIC,IAEnDb,GACHtC,EAAKkD,kBAAkBjC,IAAIqB,GAG5B9B,KAAKkB,KAAO,SAASf,EAAMyC,EAASC,EAAUR,GACzCP,IAAQtC,EAAKkD,kBAAkBI,IAAI3C,IAGvC4C,IAAIV,IACH5C,WAAW+B,QAAQxB,MACnB,UAAWsC,EAAYnC,GACvB,UAAWmC,EAAYM,GACvB,UAAWN,EAAYO,QAQ5BG,iBAAWrD,UAAUsD,WAErB,iBAAIC,eAAiB,CAEpBC,iBAAiB,EACjBC,kBAAkB,EAClBC,mBAAmB,EAGnBC,kBAAmB3D,UAAUsD,UAAUf,IACvCqB,kBAAmB5D,UAAUsD,UAAUb,IACvCoB,qBAAsB,SAASrD,GAC9B,IAAIgB,EACJ,GAAInB,KAAKC,MAAMY,eAAeV,GAAQ,CACrC,IAAIW,EAAMd,KAAKC,MAAME,UACdH,KAAKC,MAAME,GAGW,eAAzBY,UAAQC,IAAIC,UACU,mBAAdjB,KAAKkB,MACflB,KAAKkB,KAAKf,OAAMkB,EAAWP,GAI7BK,EAAa,CACZC,WAAYjB,EACZmB,KAAMnB,GAGsB,eAAzBY,UAAQC,IAAIC,WACfE,EAAa,CACZC,WAAYjB,EACZmB,KAAMnB,EACNoB,UAAW,CAAE9B,WAAW+B,QAAQxB,MAAQ,KAAMG,EAAM,UAAWW,KAIjEd,KAAKyB,SAASN,EAAY,MAACE,EAAWP,MAMxC2C,2BAA4B,WAE3B,OADAjD,oBAAoBC,IAAIT,KAAM,YACvB0D,OAAOC,KAAK3D,KAAKC,QAIzB2D,iBAAkB,SAASC,GAC1BlC,OAAOC,MAAMC,QAEbpC,WAAWqE,UAAU9D,KAAM6D,GAC3BlC,OAAOC,MAAMG,QAEdgC,iBAAkB,SAASF,GAC1BlC,OAAOC,MAAMC,QAEbpC,WAAWuE,UAAUhE,KAAM6D,GAC3BlC,OAAOC,MAAMG,QAEdkC,yBAA0B,SAASnC,GAClC,OAAO,GAERoC,yBAA0B,SAASpC,KAGnCqC,gBAAiB,SAASrC,GACzB,OAAO9B,KAAKC,MAAMY,eAAeiB,KAKN,eAAzBf,UAAQC,IAAIC,WACfiC,eAAe,eAAiB,WAC/B,OAAOzD,WAAW+B,QAAQxB,KAAK0B,aAAe,OAIhDjC,WAAW2E,cAAczE,UAAUsD,UAAUC,uBAK5BvD,eAAAA"}