import{a as process$1}from"./chunk-bacf0c54.mjs";import{b as bindingProxy}from"./chunk-2fc7c20b.mjs";import"./chunk-5f1245ff.mjs";import"./chunk-2c9f11a8.mjs";import"./chunk-862b179d.mjs";import"./chunk-660b4975.mjs";import"./chunk-fa6b878a.mjs";import{b as isNode}from"./chunk-e7f43bec.mjs";import{a as LOCATION}from"./chunk-932cc7dc.mjs";import{a as getDocument}from"./chunk-14877182.mjs";import{a as getGlobal}from"./chunk-cc1f8896.mjs";import"./chunk-037c51df.mjs";import{a as diffObject}from"./chunk-59303698.mjs";import{a as route}from"./chunk-99da6487.mjs";import{a as canReflect}from"./chunk-7e0220de.mjs";import{a as KeyTree}from"./chunk-8d049599.mjs";import{a as queues}from"./chunk-12ed728f.mjs";import{a as SimpleObservable}from"./chunk-65b62c71.mjs";import{a as ObservationRecorder}from"./chunk-8811d387.mjs";import{a as domEvents}from"./chunk-cb75b84f.mjs";import"./chunk-b37d91a1.mjs";import"./chunk-805ffcb4.mjs";import"./chunk-3b4c7b38.mjs";import"./chunk-dc356f62.mjs";import"./chunk-707fbcc4.mjs";import"./chunk-8a3a072d.mjs";import"./chunk-7dfeb1df.mjs";import"./chunk-585d4076.mjs";import"./chunk-79943599.mjs";import"./chunk-b1806013.mjs";import"./chunk-a9b254be.mjs";import"./chunk-d2889630.mjs";import"./chunk-825526fa.mjs";import"./chunk-8f9d5c6d.mjs";import"./chunk-576d20b1.mjs";import"./chunk-c1d5d21e.mjs";import"./chunk-f8a6947c.mjs";import"./chunk-910f3205.mjs";import"./chunk-b2e1c1d8.mjs";import"./chunk-bd824939.mjs";import"./chunk-541940e7.mjs";import"./chunk-75bea8d8.mjs";import"./chunk-321b6aa1.mjs";import"./chunk-a97d251a.mjs";import"./chunk-04598776.mjs";import"./chunk-a661b1ce.mjs";import"./chunk-65a1c0b6.mjs";import"./chunk-3f0a7243.mjs";import"./chunk-88d0c417.mjs";import"./chunk-d3aaf861.mjs";import"./chunk-27026eab.mjs";import"./chunk-27ff5bb0.mjs";import"./chunk-0d15ce09.mjs";import"./chunk-91f0208e.mjs";import"./chunk-0c313990.mjs";import"./chunk-0cc812f8.mjs";import"./chunk-a73c65cc.mjs";import"./chunk-eae5b219.mjs";var methodsToOverwrite=["pushState","replaceState"],cleanRoot=function(){var e=LOCATION(),t=e.protocol+"//"+e.host,a=bindingProxy.call("root");return 0===a.indexOf(t)?a.substr(t.length):a};function getCurrentUrl(){var e=cleanRoot(),t=LOCATION(),a=t.pathname+t.search,s=a.indexOf(e);return a.substr(s+e.length)}function PushstateObservable(){this.options={replaceStateOnceKeys:[],replaceStateKeys:[]},this.dispatchHandlers=this.dispatchHandlers.bind(this);var e=this;this.anchorClickHandler=function(t){PushstateObservable.prototype.anchorClickHandler.call(e,this,t)},this.handlers=new KeyTree([Object,Array],{onFirst:this.setup.bind(this),onEmpty:this.teardown.bind(this)}),this.keepHash=!0}PushstateObservable.prototype=Object.create(SimpleObservable.prototype),PushstateObservable.constructor=PushstateObservable,canReflect.assign(PushstateObservable.prototype,{root:"/",matchSlashes:!1,paramsMatcher:/^\?(?:[^=]+=[^&]*&)*[^=]+=[^&]*/,querySeparator:"?",dispatchHandlers:function(){var e=this._value,t=[];this._value=getCurrentUrl(),e!==this._value&&(t=[this.handlers.getNode([]),this,[this._value,e]],"production"!==process$1.env.NODE_ENV&&(t=[this.handlers.getNode([]),this,[this._value,e],null,[canReflect.getName(this),"changed to",this._value,"from",e]]),queues.enqueueByQueue.apply(queues,t))},anchorClickHandler:function(e,t){if(!(t.isDefaultPrevented?t.isDefaultPrevented():!0===t.defaultPrevented)){var a=e.host||window.location.host;if("javascript://"===e.href)return;if("_blank"===e.target)return;if(t.altKey||t.ctrlKey||t.metaKey||t.shiftKey)return;if(window.location.host===a){var s=cleanRoot();if(0===e.pathname.indexOf(s)){var r=e.pathname+e.search,n=r.substr(s.length);if(void 0!==route.rule(n))e.href.indexOf("#")>=0&&(this.keepHash=!0),(r!==window.location.pathname+window.location.search||e.hash===window.location.hash)&&t.preventDefault&&t.preventDefault(),window.history.pushState(null,null,e.href)}}}},setup:function(){if(!isNode()){this._value=getCurrentUrl(),domEvents.addDelegateListener(document.documentElement,"click","a",this.anchorClickHandler);var e=this.originalMethods={},t=this.dispatchHandlers;canReflect.eachKey(methodsToOverwrite,function(a){this.originalMethods[a]=window.history[a],window.history[a]=function(s,r,n){var o=0===n.indexOf("http"),c=LOCATION(),i=c.search+c.hash;(!o&&n!==c.pathname+i||o&&n!==c.href+i)&&(e[a].apply(window.history,arguments),t())}},this),domEvents.addEventListener(window,"popstate",this.dispatchHandlers)}},teardown:function(){if(!isNode()){var e=getDocument(),t=getGlobal();domEvents.removeDelegateListener(e.documentElement,"click","a",this.anchorClickHandler),canReflect.eachKey(methodsToOverwrite,function(e){t.history[e]=this.originalMethods[e]},this),domEvents.removeEventListener(t,"popstate",this.dispatchHandlers)}},get:function(){return ObservationRecorder.add(this),getCurrentUrl()},set:function(e){var t,a=route.deparam(e),s=route.deparam(getCurrentUrl()),r="pushState";if(this.keepHash&&-1===e.indexOf("#")&&window.location.hash&&(e+=window.location.hash),t={},diffObject(s,a).forEach(function(e){return t[e.key]=!0}),this.options.replaceStateKeys.length&&this.options.replaceStateKeys.forEach(function(e){t[e]&&(r="replaceState")}),this.options.replaceStateOnceKeys.length)for(var n=this.options.replaceStateOnceKeys.length-1;n>=0;n--){var o=this.options.replaceStateOnceKeys[n];t[o]&&(r="replaceState",this.options.replaceStateOnceKeys.splice(n,1))}window.history[r](null,null,bindingProxy.call("root")+e)},replaceStateOn:function(){canReflect.addValues(this.options.replaceStateKeys,canReflect.toArray(arguments))},replaceStateOnce:function(){canReflect.addValues(this.options.replaceStateOnceKeys,canReflect.toArray(arguments))},replaceStateOff:function(){canReflect.removeValues(this.options.replaceStateKeys,canReflect.toArray(arguments)),canReflect.removeValues(this.options.replaceStateOnceKeys,canReflect.toArray(arguments))}});var pushstateObservableProto={"can.getValue":PushstateObservable.prototype.get,"can.setValue":PushstateObservable.prototype.set,"can.onValue":PushstateObservable.prototype.on,"can.offValue":PushstateObservable.prototype.off,"can.isMapLike":!1,"can.valueHasDependencies":function(){return!0}};"production"!==process$1.env.NODE_ENV&&(pushstateObservableProto["can.getName"]=function(){return"PushstateObservable<"+this._value+">"}),canReflect.assignSymbols(PushstateObservable.prototype,pushstateObservableProto);var canRoutePushstate=PushstateObservable;export default canRoutePushstate;
//# sourceMappingURL=can-route-pushstate.js.map
