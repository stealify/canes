{"version":3,"file":"can-fixture.js","sources":["../node_modules/can-fixture/xhr.js","../node_modules/can-fixture/fixture.js"],"sourcesContent":["\"use strict\";\n/* global require, window, global */\n/* global setTimeout, clearTimeout, XMLHttpRequest */\n\n// This overwrites the default XHR with a mock XHR object.\n// The mock XHR object's `.send` method is able to\n// call the fixture callbacks or create a real XHR request\n// and then respond normally.\nvar fixtureCore = require(\"./core\");\nvar deparam = require(\"can-deparam\");\nvar canReflect = require(\"can-reflect\");\nvar canLog = require('can-log');\n\n// Save the real XHR object as XHR\nvar XHR = XMLHttpRequest,\n// Get a global reference.\n\tGLOBAL = typeof global !== \"undefined\"? global : window;\n\n// Figure out props and events on XHR object\n// but start with some defaults\nvar props = [\n\t\"type\", \"url\", \"async\", \"response\", \"responseText\", \"responseType\",\n\t\"responseXML\", \"responseURL\", \"status\", \"statusText\", \"readyState\"\n];\nvar events = [\"abort\", \"error\", \"load\", \"loadend\", \"loadstart\",  \"progress\", \"readystatechange\"];\n(function(){\n\tvar x = new XHR();\n\tfor(var prop in x) {\n\t\tif(prop.indexOf(\"on\") === 0) {\n\t\t\tif (events.indexOf(prop.substr(2)) === -1) {\n\t\t\t\tevents.push(prop.substr(2));\n\t\t\t}\n\t\t} else if (props.indexOf(prop) === -1 && typeof x[prop] !== 'function') {\n\t\t\tprops.push(prop);\n\t\t}\n\t}\n})();\n// DEFINE HELPERS\n\n// Call all of an event for an XHR object\nfunction callEvents(xhr, ev) {\n\tvar evs = xhr.__events[ev] || [], fn;\n\tfor(var i = 0, len = evs.length; i < len; i++) {\n\t\tfn = evs[i];\n\t\tfn.call(xhr);\n\t}\n}\n\nGLOBAL.XMLHttpRequest = function() {\n\tvar mockXHR = this;\n\tvar realXHR = new XHR();\n\n\t// store real xhr on mockXHR\n\tthis._xhr = realXHR;\n\n\t// create other properties needed by prototype functions\n\tthis._requestHeaders = {};\n\tthis.__events = {};\n\n\t// wire up events to forward from real xhr to fake xhr\n\tevents.forEach(function(eventName) {\n\t\trealXHR[\"on\" + eventName] = function() {\n\t\t\tcallEvents(mockXHR, eventName);\n\t\t\tif(mockXHR[\"on\"+eventName]) {\n\t\t\t\treturn mockXHR[\"on\"+eventName].apply(mockXHR, arguments);\n\t\t\t}\n\t\t};\n\t});\n\n\t// The way code detects if the browser supports onload is to check\n\t// if a new XHR object has the onload property, so setting it to null\n\t// passes that check.\n\tthis.onload = null;\n};\nGLOBAL.XMLHttpRequest._XHR = XHR;\n\n// Methods on the mock XHR:\ncanReflect.assignMap(XMLHttpRequest.prototype,{\n\tsetRequestHeader: function(name, value){\n\t\tthis._requestHeaders[name] = value;\n\t},\n\topen: function(type, url, async){\n\t\tthis.type = type;\n\t\tthis.url = url;\n\t\tthis.async = async === false ? false : true;\n\t},\n\tgetAllResponseHeaders: function(){\n\t\treturn this._xhr.getAllResponseHeaders.apply(this._xhr, arguments);\n\t},\n\taddEventListener: function(ev, fn){\n\t\tvar evs = this.__events[ev] = this.__events[ev] || [];\n\t\tevs.push(fn);\n\t},\n\tremoveEventListener: function(ev, fn){\n\t\tvar evs = this.__events[ev] = this.__events[ev] || [];\n\t\tvar idx = evs.indexOf(fn);\n\t\tif(idx >= 0) {\n\t\t\tevs.splice(idx, 1);\n\t\t}\n\t},\n\tsetDisableHeaderCheck: function(val){\n\t\tthis._disableHeaderCheck = !!val;\n\t},\n\tgetResponseHeader: function(key){\n\t\treturn this._xhr.getResponseHeader(key);\n\t},\n\tabort: function() {\n\t\tvar xhr = this._xhr;\n\n\t\t// If we are aborting a delayed fixture we have to make the fake\n\t\t// steps that are expected for `abort` to\n\t\tif(this.timeoutId !== undefined) {\n\t\t\tclearTimeout(this.timeoutId);\n\t\t\txhr.open(this.type, this.url, this.async === false ? false : true);\n\t\t\txhr.send();\n\t\t}\n\n\t\treturn xhr.abort();\n\t},\n\t// This needs to compile the information necessary to see if\n\t// there is a corresponding fixture.\n\t// If there isn't a fixture, this should create a real XHR object\n\t// linked to the mock XHR instance and make a data request.\n\t// If there is a fixture, depending on the type of fixture the following happens:\n\t// - dynamic fixtures - call the dynamic fixture, use the result to update the\n\t//   mock XHR object and trigger its callbacks.\n\t// - redirect fixtures - create a real XHR linked to the mock XHR for the new url.\n\tsend: function(data) {\n\t\t// derive the XHR settings object from the XHR object\n\t\tvar type = this.type.toLowerCase() || 'get';\n\t\tvar xhrSettings = {\n\t\t\turl: this.url,\n\t\t\tdata: data,\n\t\t\theaders: this._requestHeaders,\n\t\t\ttype: type,\n\t\t\tmethod: type,\n\t\t\tasync: this.async,\n\t\t\txhr: this\n\t\t};\n\t\t// if get or delete, the url should not include the querystring.\n\t\t// the querystring should be the data.\n\t\tif(!xhrSettings.data && xhrSettings.type === \"get\" || xhrSettings.type === \"delete\") {\n\t\t\txhrSettings.data = deparam( xhrSettings.url.split(\"?\")[1] );\n\t\t\txhrSettings.url = xhrSettings.url.split(\"?\")[0];\n\t\t}\n\n\t\t// Try to convert the request body to POJOs.\n\t\tif(typeof xhrSettings.data === \"string\") {\n\t\t\ttry {\n\t\t\t\txhrSettings.data = JSON.parse(xhrSettings.data);\n\t\t\t} catch(e) {\n\t\t\t\txhrSettings.data = deparam( xhrSettings.data );\n\t\t\t}\n\t\t}\n\n\t\t// See if the XHR settings match a fixture.\n\t\tvar fixtureSettings = fixtureCore.get(xhrSettings);\n\t\tvar mockXHR = this;\n\n\t\t// If a dynamic fixture is being used, we call the dynamic fixture function and then\n\t\t// copy the response back onto the `mockXHR` in the right places.\n\t\tif(fixtureSettings && typeof fixtureSettings.fixture === \"function\") {\n\n\t\t\tthis.timeoutId = fixtureCore.callDynamicFixture(xhrSettings, fixtureSettings, function(status, body, headers, statusText){\n\t\t\t\tbody = typeof body === \"string\" ? body :  JSON.stringify(body);\n\n\t\t\t\t// we are no longer using the real XHR\n\t\t\t\t// set it to an object so that props like readyState can be set\n\t\t\t\tmockXHR._xhr = {\n\t\t\t\t\topen: function(){},\n\t\t\t\t\tsend: function() {},\n\t\t\t\t\tabort: function(){},\n\t\t\t\t\tgetResponseHeader: function(){}\n\t\t\t\t};\n\n\t\t\t\tcanReflect.assignMap(mockXHR, {\n\t\t\t\t\treadyState: 4,\n\t\t\t\t\tstatus: status\n\t\t\t\t});\n\n\t\t\t\tvar success = (status >= 200 && status < 300 || status === 304);\n\t\t\t\tif ( success ) {\n\t\t\t\t\tcanReflect.assignMap(mockXHR,{\n\t\t\t\t\t\tstatusText: statusText || \"OK\",\n\t\t\t\t\t\tresponseText: body\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcanReflect.assignMap(mockXHR,{\n\t\t\t\t\t\tstatusText: statusText || \"error\",\n\t\t\t\t\t\tresponseText: body\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmockXHR.getAllResponseHeaders = function() {\n\t\t\t\t\tvar ret = [];\n\t\t\t\t\tcanReflect.eachKey(headers || {}, function(value, name) {\n\t\t\t\t\t\tArray.prototype.push.apply(ret, [name, ': ', value, '\\r\\n']);\n\t\t\t\t\t});\n\t\t\t\t\treturn ret.join('');\n\t\t\t\t};\n\n\t\t\t\tif(mockXHR.onreadystatechange) {\n\t\t\t\t\tmockXHR.onreadystatechange({ target: mockXHR });\n\t\t\t\t}\n\n\t\t\t\t// fire progress events\n\t\t\t\tcallEvents(mockXHR, \"progress\");\n\t\t\t\tif(mockXHR.onprogress) {\n\t\t\t\t\tmockXHR.onprogress();\n\t\t\t\t}\n\n\t\t\t\tcallEvents(mockXHR, \"load\");\n\t\t\t\tif(mockXHR.onload) {\n\t\t\t\t\tmockXHR.onload();\n\t\t\t\t}\n\n\t\t\t\tcallEvents(mockXHR, \"loadend\");\n\t\t\t\tif(mockXHR.onloadend) {\n\t\t\t\t\tmockXHR.onloadend();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\t\t// At this point there is either not a fixture or a redirect fixture.\n\t\t// Either way we are doing a request.\n\t\tvar makeRequest = function() {\n\t\t\tmockXHR._xhr.open(mockXHR._xhr.type, mockXHR._xhr.url, mockXHR._xhr.async);\n\t\t\tif(mockXHR._requestHeaders) {\n\t\t\t\tObject.keys(mockXHR._requestHeaders).forEach(function(key) {\n\t\t\t\t\tmockXHR._xhr.setRequestHeader(key, mockXHR._requestHeaders[key]);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn mockXHR._xhr.send(data);\n\t\t};\n\n\t\tif(fixtureSettings && typeof fixtureSettings.fixture === \"number\") {\n\t\t\tcanLog.log(\"can-fixture: \"+xhrSettings.url+\" => delay \" + fixtureSettings.fixture+\"ms\");\n\t\t\tthis.timeoutId = setTimeout(makeRequest, fixtureSettings.fixture);\n\t\t\treturn;\n\t\t}\n\n\t\t// if we do have a fixture, update the real XHR object.\n\t\tif(fixtureSettings) {\n\t\t\tcanLog.log(\"can-fixture: \"+xhrSettings.url+\" => \" + fixtureSettings.url);\n\t\t\tcanReflect.assignMap(mockXHR, fixtureSettings);\n\t\t}\n\n\t\t// Make the request.\n\t\treturn makeRequest();\n\t}\n});\n\n// when props of mockXHR are get/set, return the prop from the real XHR\nprops.forEach(function(prop) {\n\tObject.defineProperty(XMLHttpRequest.prototype, prop, {\n\t\tget: function(){\n\t\t\treturn this._xhr[prop];\n\t\t},\n\t\tset: function(newVal){\n\t\t\ttry {\n\t\t\t\tthis._xhr[prop] = newVal;\n\t\t\t} catch(e) {}\n\t\t}\n\t});\n});\n","\"use strict\";\nvar core = require(\"./core\");\nvar fixture = core.add;\nvar Store = require(\"./store\");\nrequire(\"./xhr\");\nvar canReflect = require(\"can-reflect\");\nvar ns = require(\"can-namespace\");\n// HELPERS START\n\nvar noop = function(){};\n\ncanReflect.assignMap(fixture, {\n\trand: function randomize (arr, min, max) {\n\t\tif (typeof arr === 'number') {\n\t\t\tif (typeof min === 'number') {\n\t\t\t\treturn arr + Math.floor(Math.random() * (min - arr+1));\n\t\t\t} else {\n\t\t\t\treturn Math.floor(Math.random() * (arr+1));\n\t\t\t}\n\n\t\t}\n\t\t// clone the array because we will remove items from it.\n\t\tvar choices = arr.slice(0);\n\n\t\t// get a random set\n\t\tif (min === undefined) {\n\t\t\tmin = 1;\n\t\t\tmax = choices.length;\n\t\t} else if(max === undefined){\n\t\t\tmax = min;\n\t\t}\n\t\t// get a random selection of arr\n\t\tvar result = [];\n\n\t\t// set max\n\t\t//random max\n\t\tvar selectedCount = min + Math.round(randomize(max - min));\n\t\tfor (var i = 0; i < selectedCount; i++) {\n\t\t\tvar selectedIndex = randomize(choices.length - 1),\n\t\t\t\tselected = choices.splice(selectedIndex, 1)[0];\n\t\t\tresult.push(selected);\n\t\t}\n\t\treturn result;\n\t},\n\txhr: function (xhr) {\n\t\treturn canReflect.assignMap({}, {\n\t\t\tabort: noop,\n\t\t\tgetAllResponseHeaders: function () {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgetResponseHeader: function () {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\topen: noop,\n\t\t\toverrideMimeType: noop,\n\t\t\treadyState: 4,\n\t\t\tresponseText: \"\",\n\t\t\tresponseXML: null,\n\t\t\tsend: noop,\n\t\t\tsetRequestHeader: noop,\n\t\t\tstatus: 200,\n\t\t\tstatusText: \"OK\"\n\t\t}, xhr);\n\t},\n\tstore: Store.make,\n\tfixtures: core.fixtures\n});\n\nif(typeof window !== \"undefined\" && typeof require.resolve !== \"function\") {\n\twindow.fixture = fixture;\n}\n\n\nmodule.exports = ns.fixture = fixture;\n"],"names":["XHR","XMLHttpRequest","GLOBAL","global","window","props","events","callEvents","xhr","ev","evs","__events","i","len","length","call","x","prop","indexOf","substr","push","mockXHR","this","realXHR","_xhr","_requestHeaders","forEach","eventName","apply","arguments","onload","_XHR","canReflect","assignMap","prototype","setRequestHeader","name","value","open","type","url","async","getAllResponseHeaders","addEventListener","fn","removeEventListener","idx","splice","setDisableHeaderCheck","val","_disableHeaderCheck","getResponseHeader","key","abort","undefined","timeoutId","clearTimeout","send","data","toLowerCase","xhrSettings","headers","method","deparam","split","JSON","parse","e","fixtureSettings","fixtureCore","get","fixture","makeRequest","Object","keys","canLog","log","setTimeout","callDynamicFixture","status","body","statusText","stringify","readyState","responseText","ret","eachKey","Array","join","onreadystatechange","target","onprogress","onloadend","defineProperty","set","newVal","core","add","noop","rand","randomize","arr","min","max","Math","floor","random","choices","slice","result","selectedCount","round","selectedIndex","selected","overrideMimeType","responseXML","store","Store","make","fixtures","require","resolve","ns"],"mappings":"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"}