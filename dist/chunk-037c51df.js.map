{"version":3,"file":"chunk-037c51df.js","sources":["../node_modules/can-dom-events/helpers/util.js","../node_modules/can-dom-events/helpers/make-event-registry.js","../node_modules/can-dom-events/helpers/-make-delegate-event-tree.js","../node_modules/can-dom-events/can-dom-events.js"],"sourcesContent":["'use strict';\n\nvar getCurrentDocument = require(\"can-globals/document/document\");\nvar isBrowserWindow = require(\"can-globals/is-browser-window/is-browser-window\");\n\nfunction getTargetDocument (target) {\n\treturn target.ownerDocument || getCurrentDocument();\n}\n\nfunction createEvent (target, eventData, bubbles, cancelable) {\n\tvar doc = getTargetDocument(target);\n\tvar event = doc.createEvent('HTMLEvents');\n\tvar eventType;\n\tif (typeof eventData === 'string') {\n\t\teventType = eventData;\n\t} else {\n\t\teventType = eventData.type;\n\t\tfor (var prop in eventData) {\n\t\t\tif (event[prop] === undefined) {\n\t\t\t\tevent[prop] = eventData[prop];\n\t\t\t}\n\t\t}\n\t}\n\tif (bubbles === undefined) {\n\t\tbubbles = true;\n\t}\n\tevent.initEvent(eventType, bubbles, cancelable);\n\treturn event;\n}\n\n// We do not account for all EventTarget classes,\n// only EventTarget DOM nodes, fragments, and the window.\nfunction isDomEventTarget (obj) {\n\tif (!(obj && obj.nodeName)) {\n\t\treturn obj === window;\n\t}\n\tvar nodeType = obj.nodeType;\n\treturn (\n\t\tnodeType === 1 || // Node.ELEMENT_NODE\n\t\tnodeType === 9 || // Node.DOCUMENT_NODE\n\t\tnodeType === 11 // Node.DOCUMENT_FRAGMENT_NODE\n\t);\n}\n\nfunction addDomContext (context, args) {\n\tif (isDomEventTarget(context)) {\n\t\targs = Array.prototype.slice.call(args, 0);\n\t\targs.unshift(context);\n\t}\n\treturn args;\n}\n\nfunction removeDomContext (context, args) {\n\tif (!isDomEventTarget(context)) {\n\t\targs = Array.prototype.slice.call(args, 0);\n\t\tcontext = args.shift();\n\t}\n\treturn {\n\t\tcontext: context,\n\t\targs: args\n\t};\n}\n\nvar fixSyntheticEventsOnDisabled = false;\n// In FireFox, dispatching a synthetic event on a disabled element throws an error.\n// Other browsers, like IE 10 do not dispatch synthetic events on disabled elements at all.\n// This determines if we have to work around that when dispatching events.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=329509\n(function() {\n\tif(!isBrowserWindow()) {\n\t\treturn;\n\t}\n\n\tvar testEventName = 'fix_synthetic_events_on_disabled_test';\n\tvar input = document.createElement(\"input\");\n\tinput.disabled = true;\n\tvar timer = setTimeout(function() {\n\t\tfixSyntheticEventsOnDisabled = true;\n\t}, 50);\n\tvar onTest = function onTest (){\n\t\tclearTimeout(timer);\n\t\tinput.removeEventListener(testEventName, onTest);\n\t};\n\tinput.addEventListener(testEventName, onTest);\n\ttry {\n\t\tvar event = document.create('HTMLEvents');\n\t\tevent.initEvent(testEventName, false);\n\t\tinput.dispatchEvent(event);\n\t} catch(e) {\n\t\tonTest();\n\t\tfixSyntheticEventsOnDisabled = true;\n\t}\n})();\n\nfunction isDispatchingOnDisabled(element, event) {\n\tvar eventType = event.type;\n\tvar isInsertedOrRemoved = eventType === 'inserted' || eventType === 'removed';\n\tvar isDisabled = !!element.disabled;\n\treturn isInsertedOrRemoved && isDisabled;\n}\n\nfunction forceEnabledForDispatch (element, event) {\n\treturn fixSyntheticEventsOnDisabled && isDispatchingOnDisabled(element, event);\n}\n\nmodule.exports = {\n\tcreateEvent: createEvent,\n\taddDomContext: addDomContext,\n\tremoveDomContext: removeDomContext,\n\tisDomEventTarget: isDomEventTarget,\n\tgetTargetDocument: getTargetDocument,\n\tforceEnabledForDispatch: forceEnabledForDispatch\n};\n","'use strict';\n\nfunction EventRegistry () {\n\tthis._registry = {};\n}\n\n/**\n * @module can-dom-events/helpers/make-event-registry\n * @parent can-dom-events.helpers\n * @description Create an event registry.\n * @signature `makeEventRegistry()`\n *   @return {can-dom-events/EventRegistry}\n * @hide\n * \n * @body\n *\n * ```js\n * var makeEventRegistry = require('can-dom-events/helpers/make-event-registry');\n * var registry = makeEventRegistry();\n *\n * var radioChange = require('can-events-dom-radiochange');\n * var removeRadioChange = registry.add(radioChange);\n *\n * registry.has('radiochange'); // => true\n * registry.get('radiochange'); // => radioChange\n *\n * removeRadioChange();\n * ```\n */\nmodule.exports = function makeEventRegistry () {\n\treturn new EventRegistry();\n};\n\n/**\n * @function make-event-registry.has eventRegistry.has\n *\n * Check whether an event type has already been registered.\n *\n * @signature `eventRegistry.has( eventType )`\n * @parent can-dom-events/EventRegistry\n * @param {String} eventType The event type for which to check.\n * @return {Boolean} Whether the event type is registered.\n*/\nEventRegistry.prototype.has = function (eventType) {\n\treturn !!this._registry[eventType];\n};\n\n/**\n * @function make-event-registry.get eventRegistry.get\n *\n * Retrieve an event type which has already been registered.\n *\n * @signature `eventRegistry.get( eventType )`\n * @parent can-dom-events/EventRegistry\n * @param {String} eventType The event type for which to retrieve.\n * @return {EventDefinition} The registered event definition, or undefined if unregistered.\n*/\nEventRegistry.prototype.get = function (eventType) {\n\treturn this._registry[eventType];\n};\n\n/**\n * @function make-event-registry.add eventRegistry.add\n *\n * Add an event to the registry.\n *\n * @signature `eventRegistry.add( event [, eventType ] )`\n * @parent can-dom-events/EventRegistry\n * @param {EventDefinition} event The event definition to register.\n * @param {String} eventType The event type with which to register the event.\n * @return {function} The callback to remove the event from the registry.\n*/\nEventRegistry.prototype.add = function (event, eventType) {\n\tif (!event) {\n\t\tthrow new Error('An EventDefinition must be provided');\n\t}\n\tif (typeof event.addEventListener !== 'function') {\n\t\tthrow new TypeError('EventDefinition addEventListener must be a function');\n\t}\n\tif (typeof event.removeEventListener !== 'function') {\n\t\tthrow new TypeError('EventDefinition removeEventListener must be a function');\n\t}\n\n\teventType = eventType || event.defaultEventType;\n\tif (typeof eventType !== 'string') {\n\t\tthrow new TypeError('Event type must be a string, not ' + eventType);\n\t}\n\n\tif (this.has(eventType)) {\n\t\tthrow new Error('Event \"' + eventType + '\" is already registered');\n\t}\n\n\tthis._registry[eventType] = event;\n\tvar self = this;\n\treturn function remove () {\n\t\tself._registry[eventType] = undefined;\n\t};\n};\n","\"use strict\";\nvar KeyTree = require('can-key-tree');\nvar canReflect = require('can-reflect');\n\n// Some events do not bubble, so delegating them requires registering the handler in the\n// capturing phase.\n// http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\nvar useCapture = function(eventType) {\n\treturn eventType === 'focus' || eventType === 'blur';\n};\n\nfunction makeDelegator (domEvents) {\n\tvar Delegator = function Delegator (parentKey){\n\t\tthis.element = parentKey; // HTMLElement\n\t\tthis.events = {}; // {[eventType: string]: Array<(event) -> void>}\n\t\tthis.delegated = {}; // {[eventType: string]: (event) -> void}\n\t};\n\n\tcanReflect.assignSymbols( Delegator.prototype, {\n\t\t\"can.setKeyValue\": function(eventType, handlersBySelector){\n\t\t\tvar handler = this.delegated[eventType] = function(ev){\n\t\t\t\tcanReflect.each(handlersBySelector, function(handlers, selector){\n\t\t\t\t\tvar cur = ev.target;\n\t\t\t\t\tdo {\n\t\t\t\t\t\t// document does not implement `.matches` but documentElement does\n\t\t\t\t\t\tvar el = cur === document ? document.documentElement : cur;\n\t\t\t\t\t\tvar matches = el.matches || el.msMatchesSelector;\n\n\t\t\t\t\t\tif (matches.call(el, selector)) {\n\t\t\t\t\t\t\thandlers.forEach(function(handler){\n\t\t\t\t\t\t\t\thandler.call(el, ev);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// since `el` points to `documentElement` when `cur` === document,\n\t\t\t\t\t\t// we need to continue using `cur` as the loop pointer, otherwhise\n\t\t\t\t\t\t// it will never end as documentElement.parentNode === document\n\t\t\t\t\t\tcur = cur.parentNode;\n\t\t\t\t\t} while (cur && cur !== ev.currentTarget);\n\t\t\t\t});\n\t\t\t};\n\t\t\tthis.events[eventType] = handlersBySelector;\n\t\t\tdomEvents.addEventListener(this.element, eventType, handler, useCapture(eventType));\n\t\t},\n\t\t\"can.getKeyValue\": function(eventType) {\n\t\t\treturn this.events[eventType];\n\t\t},\n\t\t\"can.deleteKeyValue\": function(eventType) {\n\t\t\tdomEvents.removeEventListener(this.element, eventType, this.delegated[eventType], useCapture(eventType));\n\t\t\tdelete this.delegated[eventType];\n\t\t\tdelete this.events[eventType];\n\t\t},\n\t\t\"can.getOwnEnumerableKeys\": function() {\n\t\t\treturn Object.keys(this.events);\n\t\t}\n\t});\n\n\treturn Delegator;\n}\n\nmodule.exports = function makeDelegateEventTree (domEvents) {\n\tvar Delegator = makeDelegator(domEvents);\n\treturn new KeyTree([Map, Delegator, Object, Array]);\n};\n","'use strict';\n\nvar namespace = require('can-namespace');\nvar util = require('./helpers/util');\nvar makeEventRegistry = require('./helpers/make-event-registry');\nvar makeDelegateEventTree = require('./helpers/-make-delegate-event-tree');\n\n\nvar domEvents = {\n\t_eventRegistry: makeEventRegistry(),\n\n\t/**\n\t* @function can-dom-events.addEvent addEvent\n\t* @parent can-dom-events.static\n\t*\n\t* Add a custom event to the global event registry.\n\t*\n\t* @signature `addEvent( event [, eventType ] )`\n\t*\n\t* ```js\n\t* var removeReturnEvent = domEvents.addEvent(enterEvent, \"return\");\n\t* ```\n\t*\n\t* @param {can-dom-events/EventDefinition} event The custom event definition.\n\t* @param {String} eventType The event type to associated with the custom event.\n\t* @return {function} The callback to remove the custom event from the registry.\n\t*/\n\taddEvent: function(event, eventType) {\n\t\treturn this._eventRegistry.add(event, eventType);\n\t},\n\n\t/**\n\t* @function can-dom-events.addEventListener addEventListener\n\t*\n\t* Add an event listener for eventType to the target.\n\t*\n\t* @signature `addEventListener( target, eventType, ...eventArgs )`\n\t* @parent can-dom-events.static\n\t* @param {DomEventTarget} target The object to which to add the listener.\n\t* @param {String} eventType The event type with which to register.\n\t* @param {*} eventArgs The arguments which configure the associated event's behavior. This is usually a\n\t* function event handler.\n\t*/\n\taddEventListener: function(target, eventType) {\n\t\tvar hasCustomEvent = domEvents._eventRegistry.has(eventType);\n\t\tif (hasCustomEvent) {\n\t\t\tvar event = domEvents._eventRegistry.get(eventType);\n\t\t\treturn event.addEventListener.apply(domEvents, arguments);\n\t\t}\n\n\t\tvar eventArgs = Array.prototype.slice.call(arguments, 1);\n\t\treturn target.addEventListener.apply(target, eventArgs);\n\t},\n\n\t/**\n\t* @function can-dom-events.removeEventListener removeEventListener\n\t*\n\t* Remove an event listener for eventType to the target.\n\t*\n\t* @signature `removeEventListener( target, eventType, ...eventArgs )`\n\t* @parent can-dom-events.static\n\t* @param {DomEventTarget} target The object to which to add the listener.\n\t* @param {String} eventType The event type with which to unregister.\n\t* @param {*} eventArgs The arguments which configure the associated event's behavior. This is usually a\n\t* function event handler.\n\t*/\n\tremoveEventListener: function(target, eventType) {\n\t\tvar hasCustomEvent = domEvents._eventRegistry.has(eventType);\n\t\tif (hasCustomEvent) {\n\t\t\tvar event = domEvents._eventRegistry.get(eventType);\n\t\t\treturn event.removeEventListener.apply(domEvents, arguments);\n\t\t}\n\n\t\tvar eventArgs = Array.prototype.slice.call(arguments, 1);\n\t\treturn target.removeEventListener.apply(target, eventArgs);\n\t},\n\n\t/**\n\t* @function can-dom-events.addDelegateListener addDelegateListener\n\t*\n\t* Attach a handler for an event for all elements that match the selector,\n\t* now or in the future, based on a root element.\n\t*\n\t* @signature `addDelegateListener( target, eventType, selector, handler )`\n\t*\n\t* ```js\n\t* // Prevents all anchor elements from changing the page\n\t* domEvents.addDelegateListener(document.body,\"click\", \"a\", function(event){\n\t*   event.preventDefault();\n\t* })\n\t* ```\n\t* @parent can-dom-events.static\n\t* @param {DomEventTarget} root The html element to listen to events that match selector within.\n\t* @param {String} eventType The event name to listen to.\n\t* @param {String} selector A selector to filter the elements that trigger the event.\n\t* @param {function} handler A function to execute at the time the event is triggered.\n\t*/\n\taddDelegateListener: function(root, eventType, selector, handler) {\n\t\tdomEvents._eventTree.add([root, eventType, selector, handler]);\n\t},\n\t/**\n\t* @function can-dom-events.removeDelegateListener removeDelegateListener\n\t*\n\t* Remove a handler for an event for all elements that match the selector.\n\t*\n\t* @signature `removeDelegateListener( target, eventType, selector, handler )`\n\t*\n\t* ```js\n\t* // Prevents all anchor elements from changing the page\n\t* function handler(event) {\n\t*   event.preventDefault();\n\t* }\n\t* domEvents.addDelegateListener(document.body,\"click\", \"a\", handler);\n\t*\n\t* domEvents.removeDelegateListener(document.body,\"click\", \"a\", handler);\n\t* ```\n\t* @parent can-dom-events.static\n\t* @param {DomEventTarget} root The html element to listen to events that match selector within.\n\t* @param {String} eventType The event name to listen to.\n\t* @param {String} selector A selector to filter the elements that trigger the event.\n\t* @param {function} handler A function that was previously passed to `addDelegateListener`.\n\t*/\n\tremoveDelegateListener: function(target, eventType, selector, handler) {\n\t\tdomEvents._eventTree.delete([target, eventType, selector, handler]);\n\t},\n\n\t/**\n\t* @function can-dom-events.dispatch dispatch\n\t*\n\t* Create and dispatch a configured event on the target.\n\t*\n\t* @signature `dispatch( target, eventData [, bubbles ][, cancelable ] )`\n\t* @parent can-dom-events.static\n\t* @param {DomEventTarget} target The object to which to add the listener.\n\t* @param {Object | String} eventData The data to be assigned to the event. If it is a string, that will be the event type.\n\t* @param {Boolean} bubbles Whether the event should bubble; defaults to true.\n\t* @param {Boolean} cancelable Whether the event can be cancelled; defaults to false.\n\t* @return {Boolean} notCancelled Whether the event dispatched without being cancelled.\n\t*/\n\tdispatch: function(target, eventData, bubbles, cancelable) {\n\t\tvar event = util.createEvent(target, eventData, bubbles, cancelable);\n\t\tvar enableForDispatch = util.forceEnabledForDispatch(target, event);\n\t\tif(enableForDispatch) {\n\t\t\ttarget.disabled = false;\n\t\t}\n\n\t\tvar ret = target.dispatchEvent(event);\n\t\tif(enableForDispatch) {\n\t\t\ttarget.disabled = true;\n\t\t}\n\n\t\treturn ret;\n\t}\n};\n\ndomEvents._eventTree = makeDelegateEventTree(domEvents);\n\n\n\n\n\nmodule.exports = namespace.domEvents = domEvents;\n"],"names":["getTargetDocument","target","ownerDocument","getCurrentDocument","createEvent","eventData","bubbles","cancelable","eventType","event","prop","type","undefined","initEvent","isDomEventTarget","obj","nodeName","window","nodeType","addDomContext","context","args","Array","prototype","slice","call","unshift","removeDomContext","shift","fixSyntheticEventsOnDisabled","isDispatchingOnDisabled","element","isInsertedOrRemoved","isDisabled","disabled","forceEnabledForDispatch","isBrowserWindow","testEventName","input","document","createElement","timer","setTimeout","onTest","clearTimeout","removeEventListener","addEventListener","create","dispatchEvent","e","EventRegistry","this","_registry","has","get","add","Error","TypeError","defaultEventType","self","useCapture","makeDelegator","domEvents","Delegator","parentKey","events","delegated","canReflect","assignSymbols","can.setKeyValue","handlersBySelector","handler","ev","each","handlers","selector","cur","el","documentElement","matches","msMatchesSelector","forEach","parentNode","currentTarget","can.getKeyValue","can.deleteKeyValue","can.getOwnEnumerableKeys","Object","keys","KeyTree","Map","_eventRegistry","makeEventRegistry","addEvent","apply","arguments","eventArgs","addDelegateListener","root","_eventTree","removeDelegateListener","delete","dispatch","util","enableForDispatch","ret","makeDelegateEventTree","namespace"],"mappings":"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"}