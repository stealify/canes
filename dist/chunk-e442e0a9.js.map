{"version":3,"file":"chunk-e442e0a9.js","sources":["../node_modules/can-dom-mutate/-util.js","../node_modules/can-dom-mutate/can-dom-mutate.js"],"sourcesContent":["\"use strict\";\nvar getDocument = require(\"can-globals/document/document\");\n\nvar push = Array.prototype.push;\n\nfunction eliminate(array, item) {\n\tvar index = array.indexOf(item);\n\tif (index >= 0) {\n\t\tarray.splice(index, 1);\n\t}\n}\n\nfunction isInDocument (node) {\n\tvar root = getDocument();\n\tif (root === node) {\n\t\treturn true;\n\t}\n\treturn root.contains(node);\n}\n\nfunction isDocumentElement (node) {\n\treturn getDocument().documentElement === node;\n}\n\nfunction isFragment (node) {\n\treturn !!(node && node.nodeType === 11);\n}\n\nfunction getChildren (parentNode) {\n\tvar nodes = [];\n\tvar node = parentNode.firstChild;\n\twhile (node) {\n\t\tnodes.push(node);\n\t\tnode = node.nextSibling;\n\t}\n\treturn nodes;\n}\n\nfunction getParents (node) {\n\tvar nodes;\n\tif (isFragment(node)) {\n\t\tnodes = getChildren(node);\n\t} else {\n\t\tnodes = [node];\n\t}\n\treturn nodes;\n}\n\nfunction getAllNodes (node) {\n\tvar nodes = getParents(node);\n\tvar cLen = nodes.length;\n\tfor (var c = 0; c < cLen; c++) {\n\t\tvar element = nodes[c];\n\t\tif (element.getElementsByTagName) {\n\t\t\tvar descendants = element.getElementsByTagName('*');\n\t\t\tpush.apply(nodes, descendants);\n\t\t}\n\t}\n\n\treturn nodes;\n}\n\nfunction subscription (fn) {\n\treturn function _subscription () {\n\t\tvar disposal = fn.apply(this, arguments);\n\t\tvar isDisposed = false;\n\t\treturn function _disposal () {\n\t\t\tif (isDisposed) {\n\t\t\t\tvar fnName = fn.name || fn.displayName || 'an anonymous function';\n\t\t\t\tvar message = 'Disposal function returned by ' + fnName + ' called more than once.';\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t\tdisposal.apply(this, arguments);\n\t\t\tisDisposed = true;\n\t\t};\n\t};\n}\n\nmodule.exports = {\n\teliminate: eliminate,\n\tisInDocument: isInDocument,\n\tgetDocument: getDocument,\n\tisDocumentElement: isDocumentElement,\n\tisFragment: isFragment,\n\tgetParents: getParents,\n\tgetAllNodes: getAllNodes,\n\tgetChildren: getChildren,\n\tsubscription: subscription\n};\n","'use strict';\n\nvar globals = require('can-globals');\nvar getRoot = require('can-globals/global/global');\nvar getMutationObserver = require('can-globals/mutation-observer/mutation-observer');\nvar namespace = require('can-namespace');\nvar setImmediate = getRoot().setImmediate || function (cb) {\n\treturn setTimeout(cb, 0);\n};\n\nvar util = require('./-util');\nvar getDocument = util.getDocument;\nvar eliminate = util.eliminate;\nvar subscription = util.subscription;\nvar isDocumentElement = util.isDocumentElement;\nvar getAllNodes = util.getAllNodes;\n\nvar push = Array.prototype.push;\nvar slice = Array.prototype.slice;\n\nvar domMutate;\nvar dataStore = new WeakMap();\n\nfunction getRelatedData(node, key) {\n\tvar data = dataStore.get(node);\n\tif (data) {\n\t\treturn data[key];\n\t}\n}\n\nfunction setRelatedData(node, key, targetListenersMap) {\n\tvar data = dataStore.get(node);\n\tif (!data) {\n\t\tdata = {};\n\t\tdataStore.set(node, data);\n\t}\n\tdata[key] = targetListenersMap;\n}\n\nfunction deleteRelatedData(node, key) {\n\tvar data = dataStore.get(node);\n\treturn delete data[key];\n}\n\nfunction batch(processBatchItems, shouldDeduplicate) {\n\tvar waitingBatch = [];\n\tvar waitingCalls = [];\n\tvar dispatchSet = new Set();\n\tvar isPrimed = false;\n\treturn function batchAdd(items, callback) {\n\t\tif (shouldDeduplicate) {\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tvar target = item.target;\n\t\t\t\tif (!dispatchSet.has(target)) {\n\t\t\t\t\twaitingBatch.push(item);\n\t\t\t\t\tdispatchSet.add(target);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tpush.apply(waitingBatch, items);\n\t\t}\n\t\tif (callback) {\n\t\t\twaitingCalls.push(callback);\n\t\t}\n\n\t\tvar shouldPrime = !isPrimed && waitingBatch.length > 0;\n\t\tif (shouldPrime) {\n\t\t\tisPrimed = true;\n\t\t\tsetImmediate(function processBatch() {\n\t\t\t\tvar currentBatch = waitingBatch;\n\t\t\t\twaitingBatch = [];\n\t\t\t\tvar currentCalls = waitingCalls;\n\t\t\t\twaitingCalls = [];\n\t\t\t\tif (shouldDeduplicate) {\n\t\t\t\t\tdispatchSet = new Set();\n\t\t\t\t}\n\t\t\t\tisPrimed = false;\n\t\t\t\tprocessBatchItems(currentBatch);\n\t\t\t\tvar callCount = currentCalls.length;\n\t\t\t\tfor (var c = 0; c < callCount; c++) {\n\t\t\t\t\tcurrentCalls[c]();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction getDocumentListeners (target, key) {\n\tvar doc = getDocument();\n\tvar data = getRelatedData(doc, key);\n\tif (data) {\n\t\treturn data.listeners;\n\t}\n}\n\nfunction getTargetListeners (target, key) {\n\tvar doc = getDocument();\n\tvar targetListenersMap = getRelatedData(doc, key);\n\tif (!targetListenersMap) {\n\t\treturn;\n\t}\n\n\treturn targetListenersMap.get(target);\n}\n\nfunction addTargetListener (target, key, listener) {\n\tvar doc = getDocument();\n\tvar targetListenersMap = getRelatedData(doc, key);\n\tif (!targetListenersMap) {\n\t\ttargetListenersMap = new Map();\n\t\tsetRelatedData(doc, key, targetListenersMap);\n\t}\n\tvar targetListeners = targetListenersMap.get(target);\n\tif (!targetListeners) {\n\t\ttargetListeners = [];\n\t\ttargetListenersMap.set(target, targetListeners);\n\t}\n\ttargetListeners.push(listener);\n}\n\nfunction removeTargetListener (target, key, listener) {\n\tvar doc = getDocument();\n\tvar targetListenersMap = getRelatedData(doc, key);\n\tif (!targetListenersMap) {\n\t\treturn;\n\t}\n\tvar targetListeners = targetListenersMap.get(target);\n\tif (!targetListeners) {\n\t\treturn;\n\t}\n\teliminate(targetListeners, listener);\n\tif (targetListeners.length === 0) {\n\t\ttargetListenersMap['delete'](target);\n\t\tif (targetListenersMap.size === 0) {\n\t\t\tdeleteRelatedData(doc, key);\n\t\t}\n\t}\n}\n\nfunction fire (callbacks, arg) {\n\tvar safeCallbacks = slice.call(callbacks, 0);\n\tvar safeCallbackCount = safeCallbacks.length;\n\tfor (var i = 0; i < safeCallbackCount; i++) {\n\t\tsafeCallbacks[i](arg);\n\t}\n}\n\nfunction dispatch(listenerKey, documentDataKey) {\n\treturn function dispatchEvents(events) {\n\t\tfor (var e = 0; e < events.length; e++) {\n\t\t\tvar event = events[e];\n\t\t\tvar target = event.target;\n\n\t\t\tvar targetListeners = getTargetListeners(target, listenerKey);\n\t\t\tif (targetListeners) {\n\t\t\t\tfire(targetListeners, event);\n\t\t\t}\n\n\t\t\tif (!documentDataKey) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar documentListeners = getDocumentListeners(target, documentDataKey);\n\t\t\tif (documentListeners) {\n\t\t\t\tfire(documentListeners, event);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction observeMutations(target, observerKey, config, handler) {\n\tvar observerData = getRelatedData(target, observerKey);\n\tif (!observerData) {\n\t\tobserverData = {\n\t\t\tobservingCount: 0\n\t\t};\n\t\tsetRelatedData(target, observerKey, observerData);\n\t}\n\n\tvar setupObserver = function () {\n\t\tvar MutationObserver = getMutationObserver();\n\t\tif (MutationObserver) {\n\t\t\tvar Node = getRoot().Node;\n\t\t\tvar isRealNode = !!(Node && target instanceof Node);\n\t\t\tif (isRealNode) {\n\t\t\t\tvar targetObserver = new MutationObserver(handler);\n\t\t\t\ttargetObserver.observe(target, config);\n\t\t\t\tobserverData.observer = targetObserver;\n\t\t\t}\n\t\t} else {\n\t\t\tif (observerData.observer) {\n\t\t\t\tobserverData.observer.disconnect();\n\t\t\t\tobserverData.observer = null;\n\t\t\t}\n\t\t}\n\t};\n\n\tif (observerData.observingCount === 0) {\n\t\tglobals.onKeyValue('MutationObserver', setupObserver);\n\t\tsetupObserver();\n\t}\n\n\tobserverData.observingCount++;\n\treturn function stopObservingMutations() {\n\t\tvar observerData = getRelatedData(target, observerKey);\n\t\tif (observerData) {\n\t\t\tobserverData.observingCount--;\n\t\t\tif (observerData.observingCount <= 0) {\n\t\t\t\tif (observerData.observer) {\n\t\t\t\t\tobserverData.observer.disconnect();\n\t\t\t\t}\n\t\t\t\tdeleteRelatedData(target, observerKey);\n\t\t\t\tglobals.offKeyValue('MutationObserver', setupObserver);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction handleTreeMutations(mutations) {\n\tvar mutationCount = mutations.length;\n\tfor (var m = 0; m < mutationCount; m++) {\n\t\tvar mutation = mutations[m];\n\n\t\tvar addedNodes = mutation.addedNodes;\n\t\tvar addedCount = addedNodes.length;\n\t\tfor (var a = 0; a < addedCount; a++) {\n\t\t\tdomMutate.dispatchNodeInsertion(addedNodes[a]);\n\t\t}\n\n\t\tvar removedNodes = mutation.removedNodes;\n\t\tvar removedCount = removedNodes.length;\n\t\tfor (var r = 0; r < removedCount; r++) {\n\t\t\tdomMutate.dispatchNodeRemoval(removedNodes[r]);\n\t\t}\n\t}\n}\n\nfunction handleAttributeMutations(mutations) {\n\tvar mutationCount = mutations.length;\n\tfor (var m = 0; m < mutationCount; m++) {\n\t\tvar mutation = mutations[m];\n\t\tif (mutation.type === 'attributes') {\n\t\t\tvar node = mutation.target;\n\t\t\tvar attributeName = mutation.attributeName;\n\t\t\tvar oldValue = mutation.oldValue;\n\t\t\tdomMutate.dispatchNodeAttributeChange(node, attributeName, oldValue);\n\t\t}\n\t}\n}\n\nvar treeMutationConfig = {\n\tsubtree: true,\n\tchildList: true\n};\n\nvar attributeMutationConfig = {\n\tattributes: true,\n\tattributeOldValue: true\n};\n\nfunction addNodeListener(listenerKey, observerKey, isAttributes) {\n\treturn subscription(function _addNodeListener(target, listener) {\n\t\t// DocumentFragment\n\t\tif(target.nodeType === 11) {\n\t\t\t// This returns a noop without actually doing anything.\n\t\t\t// We should probably warn about passing a DocumentFragment here,\n\t\t\t// but since can-stache does so currently we are ignoring until that is\n\t\t\t// fixed.\n\t\t\treturn Function.prototype;\n\t\t}\n\n\t\tvar stopObserving;\n\t\tif (isAttributes) {\n\t\t\tstopObserving = observeMutations(target, observerKey, attributeMutationConfig, handleAttributeMutations);\n\t\t} else {\n\t\t\tstopObserving = observeMutations(getDocument(), observerKey, treeMutationConfig, handleTreeMutations);\n\t\t}\n\n\t\taddTargetListener(target, listenerKey, listener);\n\t\treturn function removeNodeListener() {\n\t\t\tstopObserving();\n\t\t\tremoveTargetListener(target, listenerKey, listener);\n\t\t};\n\t});\n}\n\nfunction addGlobalListener(globalDataKey, addNodeListener) {\n\treturn subscription(function addGlobalGroupListener(documentElement, listener) {\n\t\tif (!isDocumentElement(documentElement)) {\n\t\t\tthrow new Error('Global mutation listeners must pass a documentElement');\n\t\t}\n\n\t\tvar doc = getDocument();\n\t\tvar documentData = getRelatedData(doc, globalDataKey);\n\t\tif (!documentData) {\n\t\t\tdocumentData = {listeners: []};\n\t\t\tsetRelatedData(doc, globalDataKey, documentData);\n\t\t}\n\n\t\tvar listeners = documentData.listeners;\n\t\tif (listeners.length === 0) {\n\t\t\t// We need at least on listener for mutation events to propagate\n\t\t\tdocumentData.removeListener = addNodeListener(doc, function () {});\n\t\t}\n\n\t\tlisteners.push(listener);\n\n\t\treturn function removeGlobalGroupListener() {\n\t\t\tvar documentData = getRelatedData(doc, globalDataKey);\n\t\t\tif (!documentData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar listeners = documentData.listeners;\n\t\t\teliminate(listeners, listener);\n\t\t\tif (listeners.length === 0) {\n\t\t\t\tdocumentData.removeListener();\n\t\t\t\tdeleteRelatedData(doc, globalDataKey);\n\t\t\t}\n\t\t};\n\t});\n}\n\nfunction toMutationEvents (nodes) {\n\tvar events = [];\n\tfor (var i = 0; i < nodes.length; i++) {\n\t\tevents.push({target: nodes[i]});\n\t}\n\treturn events;\n}\n\nvar domMutationPrefix = 'domMutation';\n\n// target listener keys\nvar insertionDataKey = domMutationPrefix + 'InsertionData';\nvar removalDataKey = domMutationPrefix + 'RemovalData';\nvar attributeChangeDataKey = domMutationPrefix + 'AttributeChangeData';\n\n// document listener keys\nvar documentInsertionDataKey = domMutationPrefix + 'DocumentInsertionData';\nvar documentRemovalDataKey = domMutationPrefix + 'DocumentRemovalData';\nvar documentAttributeChangeDataKey = domMutationPrefix + 'DocumentAttributeChangeData';\n\n// observer keys\nvar treeDataKey = domMutationPrefix + 'TreeData';\nvar attributeDataKey = domMutationPrefix + 'AttributeData';\n\nvar dispatchInsertion = batch(dispatch(insertionDataKey, documentInsertionDataKey), true);\nvar dispatchRemoval = batch(dispatch(removalDataKey, documentRemovalDataKey), true);\nvar dispatchAttributeChange = batch(dispatch(attributeChangeDataKey, documentAttributeChangeDataKey));\n\n// node listeners\nvar addNodeInsertionListener = addNodeListener(insertionDataKey, treeDataKey);\nvar addNodeRemovalListener = addNodeListener(removalDataKey, treeDataKey);\nvar addNodeAttributeChangeListener = addNodeListener(attributeChangeDataKey, attributeDataKey, true);\n\n// global listeners\nvar addInsertionListener = addGlobalListener(\n\tdocumentInsertionDataKey,\n\taddNodeInsertionListener\n);\nvar addRemovalListener = addGlobalListener(\n\tdocumentRemovalDataKey,\n\taddNodeRemovalListener\n);\nvar addAttributeChangeListener = addGlobalListener(\n\tdocumentAttributeChangeDataKey,\n\taddNodeAttributeChangeListener\n);\n\n/**\n * @module {{}} can-dom-mutate\n * @parent can-dom-utilities\n * @collection can-infrastructure\n *\n * @description Dispatch and listen for DOM mutations.\n * @group can-dom-mutate.static 0 methods\n * @group can-dom-mutate/modules 1 modules\n * @signature `domMutate`\n *\n * `can-dom-mutate` exports an object that lets you listen to changes\n * in the DOM using the [MutationObserver](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n * API.\n *\n * ```js\n * import domMutate from \"can-dom-mutate\";\n *\n * domMutate //->\n * {\n *   onAttributeChange( documentElement, callback ),\n *   onInsertion( documentElement, callback ),\n *   onRemoval( documentElement, callback ),\n *   onNodeAttributeChange( node, callback ),\n *   onNodeInsertion( node, callback ),\n *   onNodeRemoval( node, callback )\n * }\n *\n * // listen to every attribute change within the document:\n * domMutate.onAttributeChange(document.documentElement, function(mutationRecord){\n *   mutationRecord.target        //-> <input>\n *   mutationRecord.attributeName //-> \"name\"\n *   mutationRecord.oldValue      //-> \"Ramiya\"\n * })\n * ```\n *\n * If you want to support browsers that do not support the `MutationObserver` api, use\n * [can-dom-mutate/node] to update the DOM. Every module within CanJS should do this:\n *\n * ```js\n * var mutate = require('can-dom-mutate/node');\n * var el = document.createElement('div');\n *\n * mutate.appendChild.call(document.body, el);\n * ```\n */\ndomMutate = {\n\t/**\n\t* @function can-dom-mutate.dispatchNodeInsertion dispatchNodeInsertion\n\t* @hide\n\t*\n\t* Dispatch an insertion mutation on the given node.\n\t*\n\t* @signature `dispatchNodeInsertion( node [, callback ] )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} node The node on which to dispatch an insertion mutation.\n\t* @param {function} callback The optional callback called after the mutation is dispatched.\n\t*/\n\tdispatchNodeInsertion: function (node, callback) {\n\t\tvar events = toMutationEvents(getAllNodes(node));\n\t\tdispatchInsertion(events, callback);\n\t},\n\n\t/**\n\t* @function can-dom-mutate.dispatchNodeRemoval dispatchNodeRemoval\n\t* @hide\n\t*\n\t* Dispatch a removal mutation on the given node.\n\t*\n\t* @signature `dispatchNodeRemoval( node [, callback ] )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} node The node on which to dispatch a removal mutation.\n\t* @param {function} callback The optional callback called after the mutation is dispatched.\n\t*/\n\tdispatchNodeRemoval: function (node, callback) {\n\t\tvar events = toMutationEvents(getAllNodes(node));\n\t\tdispatchRemoval(events, callback);\n\t},\n\n\t/**\n\t* @function can-dom-mutate.dispatchNodeAttributeChange dispatchNodeAttributeChange\n\t* @parent can-dom-mutate.static\n\t* @hide\n\t*\n\t* Dispatch an attribute change mutation on the given node.\n\t*\n\t* @signature `dispatchNodeAttributeChange( node, attributeName, oldValue [, callback ] )`\n\t*\n\t* ```\n\t* input.setAttribute(\"value\", \"newValue\")\n\t* domMutate.dispatchNodeAttributeChange(input, \"value\",\"oldValue\")\n\t* ```\n\t*\n\t*\n\t* @param {Node} target The node on which to dispatch an attribute change mutation.\n\t* @param {String} attributeName The attribute name whose value has changed.\n\t* @param {String} oldValue The attribute value before the change.\n\t* @param {function} callback The optional callback called after the mutation is dispatched.\n\t*/\n\tdispatchNodeAttributeChange: function (target, attributeName, oldValue, callback) {\n\t\tdispatchAttributeChange([{\n\t\t\ttarget: target,\n\t\t\tattributeName: attributeName,\n\t\t\toldValue: oldValue\n\t\t}], callback);\n\t},\n\n\t/**\n\t* @function can-dom-mutate.onNodeInsertion onNodeInsertion\n\t*\n\t* Listen for insertion mutations on the given node.\n\t*\n\t* @signature `onNodeInsertion( node, callback )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} node The node on which to listen for insertion mutations.\n\t* @param {function} callback The callback called when an insertion mutation is dispatched.\n\t* @return {function} The callback to remove the mutation listener.\n\t*/\n\tonNodeInsertion: addNodeInsertionListener,\n\n\t/**\n\t* @function can-dom-mutate.onNodeRemoval onNodeRemoval\n\t*\n\t* Listen for removal mutations on the given node.\n\t*\n\t* @signature `onNodeRemoval( node, callback )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} node The node on which to listen for removal mutations.\n\t* @param {function} callback The callback called when a removal mutation is dispatched.\n\t* @return {function} The callback to remove the mutation listener.\n\t*/\n\tonNodeRemoval: addNodeRemovalListener,\n\n\t/**\n\t* @function can-dom-mutate.onNodeAttributeChange onNodeAttributeChange\n\t*\n\t* Listen for attribute change mutations on the given node.\n\t*\n\t* @signature `onNodeAttributeChange( node, callback )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} node The node on which to listen for attribute change mutations.\n\t* @param {function} callback The callback called when an attribute change mutation is dispatched.\n\t* @return {function} The callback to remove the mutation listener.\n\t*/\n\tonNodeAttributeChange: addNodeAttributeChangeListener,\n\n\t/**\n\t* @function can-dom-mutate.onRemoval onRemoval\n\t*\n\t* Listen for removal mutations on any node within the documentElement.\n\t*\n\t* @signature `onRemoval( documentElement, callback )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} documentElement The documentElement on which to listen for removal mutations.\n\t* @param {function} callback The callback called when a removal mutation is dispatched.\n\t* @return {function} The callback to remove the mutation listener.\n\t*/\n\tonRemoval: addRemovalListener,\n\n\t/**\n\t* @function can-dom-mutate.onInsertion onInsertion\n\t*\n\t* Listen for insertion mutations on any node within the documentElement.\n\t*\n\t* @signature `onInsertion( documentElement, callback )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} documentElement The documentElement on which to listen for removal mutations.\n\t* @param {function} callback The callback called when a insertion mutation is dispatched.\n\t* @return {function} The callback to remove the mutation listener.\n\t*/\n\tonInsertion: addInsertionListener,\n\n\t/**\n\t* @function can-dom-mutate.onAttributeChange onAttributeChange\n\t*\n\t* Listen for attribute change mutations on any node within the documentElement.\n\t*\n\t* @signature `onAttributeChange( documentElement, callback )`\n\t* @parent can-dom-mutate.static\n\t* @param {Node} documentElement The documentElement on which to listen for removal mutations.\n\t* @param {function} callback The callback called when an attribute change mutation is dispatched.\n\t* @return {function} The callback to remove the mutation listener.\n\t*/\n\tonAttributeChange: addAttributeChangeListener\n};\n\nmodule.exports = namespace.domMutate = domMutate;\n"],"names":["push","Array","prototype","eliminate","array","item","index","indexOf","splice","isInDocument","node","root","getDocument","contains","isDocumentElement","documentElement","isFragment","nodeType","getChildren","parentNode","nodes","firstChild","nextSibling","getParents","getAllNodes","cLen","length","c","element","getElementsByTagName","descendants","apply","subscription","fn","disposal","this","arguments","isDisposed","fnName","name","displayName","Error","domMutate","setImmediate","getRoot","cb","setTimeout","util","slice","dataStore","WeakMap","getRelatedData","key","data","get","setRelatedData","targetListenersMap","set","deleteRelatedData","batch","processBatchItems","shouldDeduplicate","waitingBatch","waitingCalls","dispatchSet","Set","isPrimed","items","callback","i","target","has","add","currentBatch","currentCalls","callCount","getDocumentListeners","listeners","getTargetListeners","addTargetListener","listener","doc","Map","targetListeners","removeTargetListener","size","fire","callbacks","arg","safeCallbacks","call","safeCallbackCount","dispatch","listenerKey","documentDataKey","events","e","event","documentListeners","observeMutations","observerKey","config","handler","observerData","observingCount","setupObserver","MutationObserver","getMutationObserver","Node","targetObserver","observe","observer","disconnect","globals","onKeyValue","offKeyValue","handleTreeMutations","mutations","mutationCount","m","mutation","addedNodes","addedCount","a","dispatchNodeInsertion","removedNodes","removedCount","r","dispatchNodeRemoval","handleAttributeMutations","type","attributeName","oldValue","dispatchNodeAttributeChange","treeMutationConfig","subtree","childList","attributeMutationConfig","attributes","attributeOldValue","addNodeListener","isAttributes","Function","stopObserving","addGlobalListener","globalDataKey","documentData","removeListener","toMutationEvents","domMutationPrefix","insertionDataKey","removalDataKey","attributeChangeDataKey","documentInsertionDataKey","documentRemovalDataKey","documentAttributeChangeDataKey","treeDataKey","attributeDataKey","dispatchInsertion","dispatchRemoval","dispatchAttributeChange","addNodeInsertionListener","addNodeRemovalListener","addNodeAttributeChangeListener","addInsertionListener","addRemovalListener","addAttributeChangeListener","onNodeInsertion","onNodeRemoval","onNodeAttributeChange","onRemoval","onInsertion","onAttributeChange","namespace"],"mappings":"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"}