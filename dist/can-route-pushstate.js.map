{"version":3,"file":"can-route-pushstate.js","sources":["../node_modules/can-route-pushstate/can-route-pushstate.js"],"sourcesContent":["// # can-route-pushstate.js\n//\n// Plugin for `route` which uses browser `history.pushState` support\n// to update window's pathname instead of the `hash`.\n//\n// It registers itself as binding on `route`, intercepts `click` events\n// on `<a>` elements across document and accordingly updates `route` state\n// and window's pathname.\n/*jshint maxdepth:6, scripturl:true*/\n\"use strict\";\nvar route = require('can-route');\nvar bindingProxy = require(\"can-route/src/binding-proxy\");\nvar canReflect = require(\"can-reflect\");\nvar KeyTree = require(\"can-key-tree\");\n\nvar queues = require(\"can-queues\");\nvar SimpleObservable = require(\"can-simple-observable\");\nvar ObservationRecorder = require(\"can-observation-recorder\");\n\nvar isNode = require('can-globals/is-node/is-node');\nvar LOCATION = require('can-globals/location/location');\nvar getDocument = require('can-globals/document/document');\nvar getGlobal = require('can-globals/global/global');\n\nvar domEvents = require('can-dom-events');\n\nvar diffObject = require('can-diff/map/map');\n\n// Original methods on `history` that will be overwritten\nvar methodsToOverwrite = ['pushState', 'replaceState'];\n\n// Always returns clean root, without domain.\nvar cleanRoot = function() {\n\tvar location = LOCATION();\n\tvar domain = location.protocol + \"//\" + location.host,\n\t\troot = bindingProxy.call(\"root\"),\n\t\tindex = root.indexOf(domain);\n\tif (index === 0) {\n\t\treturn root.substr(domain.length);\n\t}\n\treturn root;\n};\n\n// Handler function for `click` events.\n// Checks if a route is matched, if one is, calls `.pushState`\n\n// gets the current url after the root\nfunction getCurrentUrl() {\n\tvar root = cleanRoot(),\n\t\tlocation = LOCATION(),\n\t\tloc = (location.pathname + location.search),\n\t\tindex = loc.indexOf(root);\n\n\treturn loc.substr(index + root.length);\n}\n\n\nfunction PushstateObservable() {\n\t/*\n\t * - replaceStateKeys\n\t * - replaceStateOnceKeys\n\t */\n\tthis.options = {\n\t\treplaceStateOnceKeys: [],\n\t\treplaceStateKeys: []\n\t};\n\tthis.dispatchHandlers = this.dispatchHandlers.bind(this);\n\tvar self = this;\n\tthis.anchorClickHandler = function(event) {\n\t\tPushstateObservable.prototype.anchorClickHandler.call(self, this, event);\n\t};\n\tthis.handlers = new KeyTree([Object, Array], {\n\t\tonFirst: this.setup.bind(this),\n\t\tonEmpty: this.teardown.bind(this)\n\t});\n\tthis.keepHash = true;\n}\nPushstateObservable.prototype = Object.create(SimpleObservable.prototype);\nPushstateObservable.constructor = PushstateObservable;\ncanReflect.assign(PushstateObservable.prototype, {\n\t/**\n\t * @property {String} can-route-pushstate.prototype.root root\n\t * @parent can-route-pushstate.prototype\n\t *\n\t * @description Configure the base url that will not be modified.\n\t *\n\t * @option {String} Represents the base url that pushstate will prepend to all\n\t * routes.  `root` defaults to: `\"/\"`.\n\t *\n\t * @body\n\t *\n\t * ## Use\n\t *\n\t * By default, a route like:\n\t *\n\t * ```js\n\t * route.urlData = new RoutePushstate();\n\t * route.register( \"{type}/{id}\" );\n\t * ```\n\t *\n\t * Matches URLs like:\n\t *\n\t * ```\n\t * http://domain.com/contact/5\n\t * ```\n\t *\n\t * But sometimes, you only want to match pages within a certain directory.  For\n\t * example, an application that is a filemanager.  You might want to\n\t * specify root and routes like:\n\t *\n\t * ```js\n\t * route.urlData = new RoutePushstate();\n\t * route.urlData.root = \"/filemanager/\";\n\t * route.register( \"file-{fileId}\" );\n\t * route.register( \"folder-{fileId}\" );\n\t * ```\n\t *\n\t * Which matches URLs like:\n\t *\n\t * ```\n\t * http://domain.com/filemanager/file-34234\n\t * ```\n\t *\n\t */\n\n\t// Start of `location.pathname` is the root.\n\t// (Can be configured via `route.urlData.root`)\n\troot: \"/\",\n\t// don't greedily match slashes in routing rules\n\tmatchSlashes: false,\n\tparamsMatcher: /^\\?(?:[^=]+=[^&]*&)*[^=]+=[^&]*/,\n\tquerySeparator: '?',\n\tdispatchHandlers: function() {\n\t\tvar old = this._value;\n\t\tvar queuesArgs = [];\n\t\tthis._value = getCurrentUrl();\n\t\tif (old !== this._value) {\n\t\t\tqueuesArgs = [this.handlers.getNode([]), this, [this._value, old]];\n\t\t\t//!steal-remove-start\n\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\tqueuesArgs = [\n\t\t\t\t\tthis.handlers.getNode([]), this, [this._value, old]\n\t\t\t\t\t/* jshint laxcomma: true */\n\t\t\t\t\t, null, [canReflect.getName(this), \"changed to\", this._value, \"from\", old]\n\t\t\t\t\t/* jshint laxcomma: false */\n\t\t\t\t];\n\t\t\t}\n\t\t\t//!steal-remove-end\n\t\t\tqueues.enqueueByQueue.apply(queues, queuesArgs);\n\t\t}\n\t},\n\tanchorClickHandler: function(node, e) {\n\n\t\tif (!(e.isDefaultPrevented ? e.isDefaultPrevented() : e.defaultPrevented === true)) {\n\t\t\t// Fix for IE showing blank host, but blank host means current host.\n\t\t\tvar linksHost = node.host || window.location.host;\n\n\t\t\t// href has some JS in it, let it run\n\t\t\tif (node.href === \"javascript://\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Do not push state if target is for blank window\n\t\t\tif (node.target === '_blank') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Do not push state if meta key was pressed, mimicking standard browser behavior\n\t\t\tif (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If link is within the same domain and descendant of `root`\n\t\t\tif (window.location.host === linksHost) {\n\t\t\t\tvar root = cleanRoot();\n\t\t\t\t// And the link is within the `root`\n\t\t\t\tif (node.pathname.indexOf(root) === 0) {\n\n\t\t\t\t\t// Removes root from url.\n\t\t\t\t\tvar nodePathWithSearch = node.pathname + node.search;\n\t\t\t\t\tvar url = nodePathWithSearch.substr(root.length);\n\n\t\t\t\t\t// If we've matched a route\n\t\t\t\t\tif (route.rule(url) !== undefined) {\n\t\t\t\t\t\t// Makes it possible to have a link with a hash.\n\t\t\t\t\t\t// Calling .pushState will dispatch events, causing\n\t\t\t\t\t\t// `can-route` to update its data, and then try to set back\n\t\t\t\t\t\t// the url without the hash.  We need to retain that.\n\t\t\t\t\t\tif (node.href.indexOf(\"#\") >= 0) {\n\t\t\t\t\t\t\tthis.keepHash = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// We do not want to call preventDefault() if the link is to the\n\t\t\t\t\t\t// same page and just a different hash; see can-route-pushstate#75\n\t\t\t\t\t\tvar windowPathWithSearch = window.location.pathname + window.location.search;\n\t\t\t\t\t\tvar shouldCallPreventDefault = nodePathWithSearch !== windowPathWithSearch || node.hash === window.location.hash;\n\n\n\t\t\t\t\t\t// Test if you can preventDefault\n\t\t\t\t\t\t// our tests can't call .click() b/c this\n\t\t\t\t\t\t// freezes phantom.\n\t\t\t\t\t\tif (shouldCallPreventDefault && e.preventDefault) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Now update window.location\n\t\t\t\t\t\twindow.history.pushState(null, null, node.href);\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tsetup: function() {\n\t\tif (isNode()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._value = getCurrentUrl();\n\t\t// Intercept routable links.\n\t\tdomEvents.addDelegateListener(document.documentElement, 'click', 'a', this.anchorClickHandler);\n\t\tvar originalMethods = this.originalMethods = {};\n\t\tvar dispatchHandlers = this.dispatchHandlers;\n\t\t// Rewrites original `pushState`/`replaceState` methods on `history` and keeps pointer to original methods\n\t\tcanReflect.eachKey(methodsToOverwrite, function(method) {\n\t\t\tthis.originalMethods[method] = window.history[method];\n\t\t\twindow.history[method] = function(state, title, url) {\n\t\t\t\t// Avoid doubled history states (with pushState).\n\t\t\t\tvar absolute = url.indexOf(\"http\") === 0;\n\t\t\t\tvar loc = LOCATION();\n\t\t\t\tvar searchHash = loc.search + loc.hash;\n\t\t\t\t// If url differs from current call original histoy method and update `route` state.\n\t\t\t\tif ((!absolute && url !== loc.pathname + searchHash) ||\n\t\t\t\t\t(absolute && url !== loc.href + searchHash)) {\n\t\t\t\t\toriginalMethods[method].apply(window.history, arguments);\n\t\t\t\t\tdispatchHandlers();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\n\t\t// Bind to `popstate` event, fires on back/forward.\n\t\tdomEvents.addEventListener(window, 'popstate', this.dispatchHandlers);\n\t},\n\tteardown: function() {\n\t\tif(isNode()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar document = getDocument();\n\t\tvar window = getGlobal();\n\n\t\tdomEvents.removeDelegateListener(document.documentElement, 'click', 'a', this.anchorClickHandler);\n\n\t\tcanReflect.eachKey(methodsToOverwrite, function(method) {\n\t\t\twindow.history[method] = this.originalMethods[method];\n\t\t}, this);\n\n\t\tdomEvents.removeEventListener(window, 'popstate', this.dispatchHandlers);\n\t},\n\tget: function get() {\n\t\tObservationRecorder.add(this);\n\t\treturn getCurrentUrl();\n\t},\n\tset: function(path) {\n\t\tvar newProps = route.deparam(path);\n\t\tvar oldProps = route.deparam(getCurrentUrl());\n\t\tvar method = \"pushState\";\n\t\tvar changed;\n\t\t// Keeps hash if not in path.\n\t\tif (this.keepHash && path.indexOf(\"#\") === -1 && window.location.hash) {\n\t\t\tpath += window.location.hash;\n\t\t}\n\n\t\tchanged = {};\n\t\tdiffObject(oldProps, newProps)\n\t\t\t.forEach(function(patch) {\n\t\t\t\treturn changed[patch.key] = true;\n\t\t\t});\n\n\t\t// check if we should call replaceState or pushState\n\t\tif (this.options.replaceStateKeys.length) {\n\t\t\tthis.options.replaceStateKeys.forEach(function(replaceKey) {\n\t\t\t\tif (changed[replaceKey]) {\n\t\t\t\t\tmethod = \"replaceState\";\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (this.options.replaceStateOnceKeys.length) {\n\t\t\tfor (var i = this.options.replaceStateOnceKeys.length - 1; i >= 0; i--) {\n\t\t\t\tvar replaceOnceKey = this.options.replaceStateOnceKeys[i];\n\n\t\t\t\tif (changed[replaceOnceKey]) {\n\t\t\t\t\tmethod = \"replaceState\";\n\t\t\t\t\t// remove so we don't do this again\n\t\t\t\t\tthis.options.replaceStateOnceKeys.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twindow.history[method](null, null, bindingProxy.call(\"root\") + path);\n\t},\n\n\n\treplaceStateOn: function() {\n\t\tcanReflect.addValues(this.options.replaceStateKeys, canReflect.toArray(arguments));\n\t},\n\treplaceStateOnce: function() {\n\t\tcanReflect.addValues(this.options.replaceStateOnceKeys, canReflect.toArray(arguments));\n\t},\n\treplaceStateOff: function() {\n\t\tcanReflect.removeValues(this.options.replaceStateKeys, canReflect.toArray(arguments));\n\t\tcanReflect.removeValues(this.options.replaceStateOnceKeys, canReflect.toArray(arguments));\n\t}\n});\n\nvar pushstateObservableProto = {\n\t\"can.getValue\": PushstateObservable.prototype.get,\n\t\"can.setValue\": PushstateObservable.prototype.set,\n\t\"can.onValue\": PushstateObservable.prototype.on,\n\t\"can.offValue\": PushstateObservable.prototype.off,\n\t\"can.isMapLike\": false,\n\t\"can.valueHasDependencies\": function() {\n\t\treturn true;\n\t},\n};\n\n//!steal-remove-start\nif (process.env.NODE_ENV !== 'production') {\n\tpushstateObservableProto[\"can.getName\"] = function() {\n\t\t\treturn \"PushstateObservable<\" + this._value + \">\";\n\t};\n}\n//!steal-remove-end\n\n\ncanReflect.assignSymbols(PushstateObservable.prototype, pushstateObservableProto);\n\nmodule.exports = PushstateObservable;\n"],"names":["methodsToOverwrite","cleanRoot","location","LOCATION","domain","protocol","host","root","bindingProxy","call","indexOf","substr","length","getCurrentUrl","loc","pathname","search","index","PushstateObservable","this","options","replaceStateOnceKeys","replaceStateKeys","dispatchHandlers","bind","self","anchorClickHandler","event","prototype","handlers","KeyTree","Object","Array","onFirst","setup","onEmpty","teardown","keepHash","create","SimpleObservable","constructor","canReflect","assign","matchSlashes","paramsMatcher","querySeparator","old","_value","queuesArgs","getNode","process","env","NODE_ENV","getName","queues","enqueueByQueue","apply","node","e","isDefaultPrevented","defaultPrevented","linksHost","window","href","target","altKey","ctrlKey","metaKey","shiftKey","nodePathWithSearch","url","undefined","route","rule","hash","preventDefault","history","pushState","isNode","domEvents","addDelegateListener","document","documentElement","originalMethods","eachKey","method","state","title","absolute","searchHash","arguments","addEventListener","getDocument","getGlobal","removeDelegateListener","removeEventListener","get","ObservationRecorder","add","set","path","changed","newProps","deparam","oldProps","diffObject","forEach","patch","key","replaceKey","i","replaceOnceKey","splice","replaceStateOn","addValues","toArray","replaceStateOnce","replaceStateOff","removeValues","pushstateObservableProto","can.getValue","can.setValue","can.onValue","on","can.offValue","off","can.isMapLike","can.valueHasDependencies","assignSymbols"],"mappings":"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"}