{"version":3,"file":"chunk-2c9f11a8.js","sources":["../node_modules/can-key-tree/dist/cjs/can-key-tree.js"],"sourcesContent":["/*can-key-tree@1.1.0#can-key-tree*/\n'use strict';\nvar reflect = require('can-reflect');\nfunction isBuiltInPrototype(obj) {\n    if (obj === Object.prototype) {\n        return true;\n    }\n    var protoString = Object.prototype.toString.call(obj);\n    var isNotObjObj = protoString !== '[object Object]';\n    var isObjSomething = protoString.indexOf('[object ') !== -1;\n    return isNotObjObj && isObjSomething;\n}\nfunction getDeepSize(root, level) {\n    if (level === 0) {\n        return reflect.size(root);\n    } else if (reflect.size(root) === 0) {\n        return 0;\n    } else {\n        var count = 0;\n        reflect.each(root, function (value) {\n            count += getDeepSize(value, level - 1);\n        });\n        return count;\n    }\n}\nfunction getDeep(node, items, depth, maxDepth) {\n    if (!node) {\n        return;\n    }\n    if (maxDepth === depth) {\n        if (reflect.isMoreListLikeThanMapLike(node)) {\n            reflect.addValues(items, reflect.toArray(node));\n        } else {\n            throw new Error('can-key-tree: Map-type leaf containers are not supported yet.');\n        }\n    } else {\n        reflect.each(node, function (value) {\n            getDeep(value, items, depth + 1, maxDepth);\n        });\n    }\n}\nfunction clearDeep(node, keys, maxDepth, deleteHandler) {\n    if (maxDepth === keys.length) {\n        if (reflect.isMoreListLikeThanMapLike(node)) {\n            var valuesToRemove = reflect.toArray(node);\n            if (deleteHandler) {\n                valuesToRemove.forEach(function (value) {\n                    deleteHandler.apply(null, keys.concat(value));\n                });\n            }\n            reflect.removeValues(node, valuesToRemove);\n        } else {\n            throw new Error('can-key-tree: Map-type leaf containers are not supported yet.');\n        }\n    } else {\n        reflect.each(node, function (value, key) {\n            clearDeep(value, keys.concat(key), maxDepth, deleteHandler);\n            reflect.deleteKeyValue(node, key);\n        });\n    }\n}\nvar KeyTree = function (treeStructure, callbacks) {\n    var FirstConstructor = treeStructure[0];\n    if (reflect.isConstructorLike(FirstConstructor)) {\n        this.root = new FirstConstructor();\n    } else {\n        this.root = FirstConstructor;\n    }\n    this.callbacks = callbacks || {};\n    this.treeStructure = treeStructure;\n    this.empty = true;\n};\nreflect.assign(KeyTree.prototype, {\n    add: function (keys) {\n        if (keys.length > this.treeStructure.length) {\n            throw new Error('can-key-tree: Can not add path deeper than tree.');\n        }\n        var place = this.root;\n        var rootWasEmpty = this.empty === true;\n        for (var i = 0; i < keys.length - 1; i++) {\n            var key = keys[i];\n            var childNode = reflect.getKeyValue(place, key);\n            if (!childNode) {\n                var Constructor = this.treeStructure[i + 1];\n                if (isBuiltInPrototype(Constructor.prototype)) {\n                    childNode = new Constructor();\n                } else {\n                    childNode = new Constructor(key);\n                }\n                reflect.setKeyValue(place, key, childNode);\n            }\n            place = childNode;\n        }\n        if (reflect.isMoreListLikeThanMapLike(place)) {\n            reflect.addValues(place, [keys[keys.length - 1]]);\n        } else {\n            throw new Error('can-key-tree: Map types are not supported yet.');\n        }\n        if (rootWasEmpty) {\n            this.empty = false;\n            if (this.callbacks.onFirst) {\n                this.callbacks.onFirst.call(this);\n            }\n        }\n        return this;\n    },\n    getNode: function (keys) {\n        var node = this.root;\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            node = reflect.getKeyValue(node, key);\n            if (!node) {\n                return;\n            }\n        }\n        return node;\n    },\n    get: function (keys) {\n        var node = this.getNode(keys);\n        if (this.treeStructure.length === keys.length) {\n            return node;\n        } else {\n            var Type = this.treeStructure[this.treeStructure.length - 1];\n            var items = new Type();\n            getDeep(node, items, keys.length, this.treeStructure.length - 1);\n            return items;\n        }\n    },\n    delete: function (keys, deleteHandler) {\n        var parentNode = this.root, path = [this.root], lastKey = keys[keys.length - 1];\n        for (var i = 0; i < keys.length - 1; i++) {\n            var key = keys[i];\n            var childNode = reflect.getKeyValue(parentNode, key);\n            if (childNode === undefined) {\n                return false;\n            } else {\n                path.push(childNode);\n            }\n            parentNode = childNode;\n        }\n        if (!keys.length) {\n            clearDeep(parentNode, [], this.treeStructure.length - 1, deleteHandler);\n        } else if (keys.length === this.treeStructure.length) {\n            if (reflect.isMoreListLikeThanMapLike(parentNode)) {\n                if (deleteHandler) {\n                    deleteHandler.apply(null, keys.concat(lastKey));\n                }\n                reflect.removeValues(parentNode, [lastKey]);\n            } else {\n                throw new Error('can-key-tree: Map types are not supported yet.');\n            }\n        } else {\n            var nodeToRemove = reflect.getKeyValue(parentNode, lastKey);\n            if (nodeToRemove !== undefined) {\n                clearDeep(nodeToRemove, keys, this.treeStructure.length - 1, deleteHandler);\n                reflect.deleteKeyValue(parentNode, lastKey);\n            } else {\n                return false;\n            }\n        }\n        for (i = path.length - 2; i >= 0; i--) {\n            if (reflect.size(parentNode) === 0) {\n                parentNode = path[i];\n                reflect.deleteKeyValue(parentNode, keys[i]);\n            } else {\n                break;\n            }\n        }\n        if (reflect.size(this.root) === 0) {\n            this.empty = true;\n            if (this.callbacks.onEmpty) {\n                this.callbacks.onEmpty.call(this);\n            }\n        }\n        return true;\n    },\n    size: function () {\n        return getDeepSize(this.root, this.treeStructure.length - 1);\n    },\n    isEmpty: function () {\n        return this.empty;\n    }\n});\nmodule.exports = KeyTree;"],"names":["isBuiltInPrototype","obj","Object","prototype","protoString","toString","call","isNotObjObj","isObjSomething","indexOf","getDeepSize","root","level","reflect","size","count","each","value","getDeep","node","items","depth","maxDepth","isMoreListLikeThanMapLike","Error","addValues","toArray","clearDeep","keys","deleteHandler","length","valuesToRemove","forEach","apply","concat","removeValues","key","deleteKeyValue","KeyTree","treeStructure","callbacks","FirstConstructor","isConstructorLike","this","empty","assign","add","place","rootWasEmpty","i","childNode","getKeyValue","Constructor","setKeyValue","onFirst","getNode","get","Type","delete","parentNode","path","lastKey","undefined","push","nodeToRemove","onEmpty","isEmpty"],"mappings":"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"}