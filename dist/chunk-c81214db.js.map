{"version":3,"file":"chunk-c81214db.js","sources":["../node_modules/can-key/sub/sub.js","../node_modules/can-fixture/data-from-url.js","../node_modules/can-fixture/matches.js","../node_modules/can-fixture/store.js","../node_modules/can-fixture/core.js"],"sourcesContent":["\"use strict\";\nvar utils = require(\"../utils\");\nvar get = require(\"../get/get\");\nvar canReflect= require(\"can-reflect\");\nvar deleteKey = require(\"../delete/delete\");\n/**\n * @module {function} can-key/sub/sub\n * @parent can-key\n * @hide\n *\n * Replace templated parts of a string with values.\n *\n * @signature `sub(str, data, remove)`\n *\n * `sub` is used to replace templated parts of a string with values.\n *\n * ```js\n * var sub = require(\"can-key/sub/sub\");\n *\n * sub(\"foo_{bar}\", {bar: \"baz\"}); // -> \"foo_baz\"\n * ```\n *\n * If `null` or `undefined` values are found, `null` is returned:\n *\n * ```js\n * sub(\"foo_{bar}\", {}); // -> null\n * ```\n *\n * If an object value is found, the templated part of the string is replace with `\"\"`\n * and the object is added to an array that is returned.\n *\n * ```js\n * var data = {element: div, selector: \"li\" }\n * var res = sub(\"{element} {selector} click\", data);\n * res //-> [\" li click\", div]\n * ```\n *\n * @param {String} str   a string with {curly brace} delimited property names\n * @param {Object} data  an object from which to read properties\n * @return {String|null|Array} the supplied string with delimited properties replaced with their values\n *                       if all properties exist on the object, null otherwise\n *\n * If `remove` is true, the properties found in delimiters in `str` are removed from `data`.\n *\n *\n */\nmodule.exports = function sub(str, data, remove) {\n\tvar obs = [];\n\tstr = str || '';\n\tobs.push(str.replace(utils.strReplacer, function (whole, inside) {\n\t\t// Convert inside to type.\n\t\tvar ob = get(data, inside);\n\n\t\tif(remove === true) {\n\t\t\tdeleteKey(data, inside);\n\t\t}\n\n\t\tif (ob === undefined || ob === null) {\n\t\t\tobs = null;\n\t\t\treturn '';\n\t\t}\n\t\t// If a container, push into objs (which will return objects found).\n\t\tif (!canReflect.isPrimitive(ob) && obs) {\n\t\t\tobs.push(ob);\n\t\t\treturn '';\n\t\t}\n\t\treturn '' + ob;\n\t}));\n\treturn obs === null ? obs : obs.length <= 1 ? obs[0] : obs;\n};\n","var replacer =  /\\{([^\\}]+)\\}/g;\n// Returns data from a url, given a fixtue URL. For example, given\n// \"todo/{id}\" and \"todo/5\", it will return an object with an id property\n// equal to 5.\nmodule.exports = function dataFromUrl(fixtureUrl, url) {\n\tif(!fixtureUrl) {\n\t\t// if there's no url, it's a match\n\t\treturn {};\n\t}\n\n\tvar order = [],\n\t\t// Sanitizes fixture URL\n\t\tfixtureUrlAdjusted = fixtureUrl.replace('.', '\\\\.')\n\t\t\t.replace('?', '\\\\?'),\n\t\t// Creates a regular expression out of the adjusted fixture URL and\n\t\t// runs it on the URL we passed in.\n\t\tres = new RegExp(fixtureUrlAdjusted.replace(replacer, function (whole, part) {\n\t\t\torder.push(part);\n\t\t\treturn \"([^\\/]+)\";\n\t\t}) + \"$\")\n\t\t\t.exec(url),\n\t\tdata = {};\n\n\t// If there were no matches, return null;\n\tif (!res) {\n\t\treturn null;\n\t}\n\n\t// Shift off the URL and just keep the data.\n\tres.shift();\n\torder.forEach( function (name) {\n\t\t// Add data from regular expression onto data object.\n\t\tdata[name] = res.shift();\n\t});\n\treturn data;\n};\n","var set = require(\"can-query-logic/src/set\");\nvar canReflect = require(\"can-reflect\");\nvar dataFromUrl = require(\"./data-from-url\");\nvar QueryLogic = require(\"can-query-logic\");\n\n\nfunction deepEqual(a, b) {\n\tif(a === b) {\n\t\treturn true;\n\t} else if(Array.isArray(a) && Array.isArray(b)) {\n\t\tif(a.length !== b.length) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn a.every(function(aVal, i){\n\t\t\t\treturn deepEqual(aVal, b[i]);\n\t\t\t});\n\t\t}\n\t} else if(a && b && canReflect.isPlainObject(a) && canReflect.isPlainObject(b)) {\n\t\tvar aKeys = Object.keys(a),\n\t\t\tbKeys = Object.keys(b);\n\t\tif(aKeys.length === bKeys.length) {\n\t\t\tfor(var prop in a) {\n\t\t\t\tif(!b.hasOwnProperty(prop)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!deepEqual(a[prop], b[prop])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\nfunction deepMatches(a, b) {\n\tif(a === b) {\n\t\treturn true;\n\t} else if(Array.isArray(a) && Array.isArray(b)) {\n\n\t\treturn a.every(function(aVal, i){\n\t\t\treturn deepMatches(aVal, b[i]);\n\t\t});\n\n\t} else if(a && b && canReflect.isPlainObject(a) && canReflect.isPlainObject(b)) {\n\n\t\tfor(var prop in a) {\n\t\t\tif(!b.hasOwnProperty(prop)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!deepMatches(a[prop], b[prop])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\n\t} else {\n\t\treturn false\n\t}\n}\n\nfunction removeFixtureAndXHR(query) {\n\tif(query.fixture || query.xhr || query.data) {\n\t\tvar clone = canReflect.serialize(query);\n\t\tdelete clone.fixture;\n\t\tdelete clone.xhr;\n\t\tdelete clone.data;\n\t\treturn clone;\n\t} else {\n\t\treturn query;\n\t}\n}\n\nfunction identityIntersection(v1, v2) {\n    return v1.value === v2.value ? v1 : set.EMPTY;\n}\nfunction identityDifference(v1, v2){\n    return v1.value === v2.value ? set.EMPTY : v1;\n}\nfunction identityUnion(v1, v2) {\n    return v1.value === v2.value ? v1 : set.UNDEFINABLE;\n}\nvar identityComparitor = {\n    intersection: identityIntersection,\n    difference: identityDifference,\n    union: identityUnion\n};\n\n\n\nfunction makeComparatorType(compare) {\n\tvar Type = function(){};\n\tvar SetType = function(value) {\n\t\tthis.value = value;\n\t};\n\tSetType.prototype.isMember = function(value, root, keys){\n\t    return compare(this.value, value, root, keys);\n\t};\n\tcanReflect.assignSymbols(Type,{\n\t\t\"can.SetType\": SetType\n\t});\n\n\tset.defineComparison(SetType,SetType, identityComparitor);\n\n\tset.defineComparison(set.UNIVERSAL,SetType,{\n\t\tdifference: function(){\n\t\t\treturn set.UNDEFINABLE;\n\t\t}\n\t});\n\treturn Type;\n}\n\nfunction quickEqual(queryA, queryB){\n\tvar dataA = queryA.data,\n\t\tdataB = queryB.data;\n\tif(dataA && dataB) {\n\t\tif(!deepMatches(dataA, dataB)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tvar q1 = new QueryLogic.KeysAnd(removeFixtureAndXHR(queryA)),\n\t\tq2 = new QueryLogic.KeysAnd(removeFixtureAndXHR(queryB));\n\treturn set.isEqual( q1, q2 );\n}\n\nfunction quickSubset(queryA, queryB){\n\treturn set.isSubset( new QueryLogic.KeysAnd(queryA), new QueryLogic.KeysAnd(queryB) );\n}\n\n// Define types\nvar types = {};\ncanReflect.eachKey({\n\tIsEmptyOrNull: function(a, b){\n\t\tif( a == null && canReflect.size(b) === 0 ) {\n\t\t\treturn true;\n\t\t} else if( b == null && canReflect.size(a) === 0 ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn quickEqual(a, b);\n\t\t}\n\t},\n\tisEmptyOrSubset: function(a, b) {\n\t\tif( a == null && canReflect.size(b) === 0 ) {\n\t\t\treturn true;\n\t\t} else if( b == null && canReflect.size(a) === 0 ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn quickSubset(a, b);\n\t\t}\n\t},\n\tTemplateUrl: function(a, b) {\n\t\treturn !!dataFromUrl(a, b);\n\t},\n\tStringIgnoreCase: function(a, b){\n\t\treturn b && a ? a.toLowerCase() === b.toLowerCase() : b === a;\n\t},\n\tIgnore: function(){\n\t\treturn true;\n\t}\n}, function(compare, name){\n\ttypes[name] = makeComparatorType(compare);\n});\n\n\n\n\n\nvar schema = {\n\tidentity: [\"id\"],\n\tkeys: {\n\t\turl: types.TemplateUrl,\n\t\tfixture: types.Ignore,\n\t\txhr: types.Ignore,\n\t\ttype: types.StringIgnoreCase,\n\t\tmethod: types.StringIgnoreCase,\n\t\thelpers: types.Ignore,\n\t\theaders: types.IsEmptyOrNull,\n\t\tdata: types.IsEmptyOrSubset\n\t}\n};\n\nvar query = new QueryLogic(schema);\n\n\n\n\nmodule.exports = {\n\tfixture: quickEqual,\n\trequest: function(requestData, fixtureData) {\n\t\treturn query.isMember({filter: fixtureData}, requestData);\n\t},\n\tmatches: function(settings, fixture, exact) {\n\t\tif (exact) {\n\t\t\treturn this.fixture(settings, fixture);\n\t\t} else {\n\t\t\treturn this.request(settings, fixture)\n\t\t}\n\t},\n\tmakeComparatorType: makeComparatorType\n};\n","var QueryLogic = require(\"can-query-logic\");\n\nvar canReflect = require(\"can-reflect\");\n\nvar memoryStore = require(\"can-memory-store\");\n\n\n\n// Returns a function that calls the method on a connection.\n// Wires up fixture signature to a connection signature.\nvar connectToConnection = function(method, convert){\n\treturn function(req, res){\n\t\t// have to get data from\n\t\tthis.connection[method]( convert.call(this, req.data) ).then(function(data){\n\t\t\tres(data);\n\t\t}, function(err){\n\t\t\tres(parseInt(err.status, 10), err);\n\t\t});\n\t};\n};\n// Returns a new makeItems function for a different baseItems;\nvar makeMakeItems = function(baseItems, idProp){\n\treturn function () {\n\t\t// clone baseItems\n\t\tvar items = [],\n\t\t\tmaxId = 0;\n\t\tbaseItems.forEach(function(item){\n\t\t\titems.push(canReflect.serialize(item) );\n\t\t\tmaxId = Math.max(item[idProp], maxId) ;\n\t\t});\n\n\t\treturn {\n\t\t\tmaxId: maxId,\n\t\t\titems: items\n\t\t};\n\t};\n};\n\nvar stringToAny = function(str){\n\tswitch(str) {\n\t\tcase \"NaN\":\n\t\tcase \"Infinity\":\n\t\t\treturn +str;\n\t\tcase \"null\":\n\t\t\treturn null;\n\t\tcase \"undefined\":\n\t\t\treturn undefined;\n\t\tcase \"true\":\n\t\tcase \"false\":\n\t\t\treturn str === \"true\";\n\t\tdefault:\n\t\t\tvar val = +str;\n\t\t\tif(!isNaN(val)) {\n\t\t\t\treturn val;\n\t\t\t} else {\n\t\t\t\treturn str;\n\t\t\t}\n\t}\n};\n\n// A store constructor function\nvar Store = function(connection, makeItems, idProp){\n\tvar schema = connection.queryLogic.schema;\n\tvar identityKey = schema.identity[0],\n\t\tkeys = schema.keys;\n\n\tif(!keys || !keys[identityKey]) {\n\t\tconsole.warn(\"No type specified for identity key. Going to convert strings to reasonable type.\");\n\t}\n\n\tthis.connection = connection;\n\tthis.makeItems = makeItems;\n\tthis.idProp = idProp;\n\tthis.reset();\n\t// we have to make sure the methods can be called without their context\n\tfor(var method in Store.prototype) {\n\t\tthis[method] = this[method].bind(this);\n\t}\n};\n\nvar doNotConvert = function(v){ return v; };\n\nfunction typeConvert(data){\n\tvar schema = this.connection.queryLogic.schema;\n\tvar identityKey = schema.identity[0],\n\t\tkeys = schema.keys;\n\tif(!keys || !keys[identityKey]) {\n\t\tkeys = {};\n\t\tkeys[identityKey] = function(value){\n\t\t\treturn typeof value === \"string\" ? stringToAny(value) : value;\n\t\t};\n\t}\n\t\t// this probably needs to be recursive, but this is ok for now\n\tvar copy = {};\n\tcanReflect.eachKey(data, function(value, key){\n\t\tif(keys[key]) {\n\t\t\tcopy[key] = canReflect.convert(value, keys[key]);\n\t\t} else {\n\t\t\tcopy[key] = value;\n\t\t}\n\t});\n\t// clone the data\n\n\treturn copy;\n\n}\n\ncanReflect.assignMap(Store.prototype,{\n\tgetListData: connectToConnection(\"getListData\",doNotConvert),\n\tgetData: connectToConnection( \"getData\",typeConvert),\n\n\t// used\n\tcreateData: function(req, res){\n\t\tvar idProp = this.idProp;\n\t\t// add an id\n\t\treq.data[idProp] = ++this.maxId;\n\n\t\tthis.connection.createData( typeConvert.call(this,req.data) ).then(function(data){\n\t\t\tres(data);\n\t\t}, function(err){\n\t\t\tres(403, err);\n\t\t});\n\t},\n\tcreateInstance: function(record){\n\t\tvar idProp = this.idProp;\n\t\tif(!(idProp in record)) {\n\t\t\trecord[idProp] = ++this.maxId;\n\t\t}\n\t\treturn this.connection.createData( record );\n\t},\n\tupdateData: connectToConnection(\"updateData\",typeConvert),\n\tupdateInstance: function(record) {\n\t\treturn this.connection.updateData(record);\n\t},\n\tdestroyInstance: function(record) {\n\t\treturn this.connection.destroyData(record);\n\t},\n\tdestroyData: connectToConnection(\"destroyData\",typeConvert),\n\treset: function(newItems){\n\t\tif(newItems) {\n\t\t\tthis.makeItems = makeMakeItems(newItems, this.idProp);\n\t\t}\n\t\tvar itemData =  this.makeItems();\n\t\tthis.maxId = itemData.maxId;\n\t\tthis.connection.updateListData(itemData.items, {});\n\t},\n\tget: function (params) {\n\t\tvar id = this.connection.queryLogic.memberIdentity(params);\n\t\treturn this.connection.getRecord(id);\n\t},\n\tgetList: function(set){\n\t\treturn this.connection.getListDataSync(set);\n\t}\n});\n\nfunction looksLikeAQueryLogic(obj){\n\treturn obj && (\"identityKeys\" in obj);\n}\n\n// ## fixture.store\n// Make a store of objects to use when making requests against fixtures.\nStore.make = function (count, make, queryLogic) {\n\t/*jshint eqeqeq:false */\n\n\n\t// Figure out makeItems which populates data\n\tvar makeItems,\n\t\tidProp;\n\tif(typeof count === \"number\") {\n\t\tif(!queryLogic) {\n\t\t\tqueryLogic = new QueryLogic({});\n\t\t} else if(!looksLikeAQueryLogic(queryLogic)) {\n\t\t\tqueryLogic = new QueryLogic(queryLogic);\n\t\t}\n\t\tidProp = queryLogic.identityKeys()[0] || \"id\";\n\t\tmakeItems = function () {\n\t\t\tvar items = [];\n\t\t\tvar maxId = 0;\n\t\t\tfor (var i = 0; i < (count); i++) {\n\t\t\t\t//call back provided make\n\t\t\t\tvar item = make(i, items);\n\n\t\t\t\tif (!item[idProp]) {\n\t\t\t\t\titem[idProp] = i;\n\t\t\t\t}\n\t\t\t\tmaxId = Math.max(item[idProp] , maxId);\n\t\t\t\titems.push(item);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmaxId: maxId,\n\t\t\t\titems: items\n\t\t\t};\n\t\t};\n\t} else if(Array.isArray(count)){\n\t\tqueryLogic = make;\n\t\tif(!queryLogic) {\n\t\t\tqueryLogic = new QueryLogic({});\n\t\t} else if(!looksLikeAQueryLogic(queryLogic)) {\n\t\t\tqueryLogic = new QueryLogic(queryLogic);\n\t\t}\n\t\tidProp = queryLogic.identityKeys()[0] || \"id\";\n\t\tmakeItems = makeMakeItems(count, idProp);\n\t}\n\n\tvar connection = memoryStore({\n\t\tqueryLogic: queryLogic,\n\t\terrorOnMissingRecord: true\n\t});\n\n\treturn new Store(connection, makeItems, idProp);\n};\n\nmodule.exports = Store;\n","\"use strict\";\n// Adds\nvar sub = require(\"can-key/sub/sub\");\nvar canReflect = require(\"can-reflect\");\nvar matches = require(\"./matches\");\nvar canLog = require(\"can-log\");\nvar canDev = require(\"can-log/dev/dev\");\nvar dataFromUrl = require(\"./data-from-url\");\n\nrequire(\"./store\");\n\nvar fixtures = [];\nexports.fixtures = fixtures;\n\nfunction isStoreLike (fixture) {\n\treturn fixture && (fixture.getData || fixture.getListData);\n}\n\nvar methodMapping = {\n\titem: {\n\t\t'GET': 'getData',\n\t\t'PUT': 'updateData',\n\t\t'DELETE': 'destroyData',\n\t},\n\tlist: {\n\t\t'GET': 'getListData',\n\t\t'POST': 'createData'\n\t}\n};\n\nfunction getMethodAndPath (route) {\n\t// Match URL if it has GET, POST, PUT, DELETE or PATCH.\n\tvar matches = route.match(/(GET|POST|PUT|DELETE|PATCH) (.+)/i);\n\tif (!matches) {\n\t\treturn [undefined, route];\n\t}\n\tvar method = matches[1];\n\tvar path = matches[2];\n\treturn [method, path];\n}\n\nfunction inferIdProp (url) {\n\tvar wrappedInBraces = /\\{(.*)\\}/;\n\tvar matches = url.match(wrappedInBraces);\n\tvar isUniqueMatch = matches && matches.length === 2;\n\tif (isUniqueMatch) {\n\t\treturn matches[1];\n\t}\n}\n\nfunction getItemAndListUrls (url, idProp) {\n\tidProp = idProp || inferIdProp(url);\n\tif (!idProp) {\n\t\treturn [undefined, url];\n\t}\n\tvar itemRegex = new RegExp('\\\\/\\\\{' + idProp+\"\\\\}.*\" );\n\tvar rootIsItemUrl = itemRegex.test(url);\n\tvar listUrl = rootIsItemUrl ? url.replace(itemRegex, \"\") : url;\n\tvar itemUrl = rootIsItemUrl ? url : (url.trim() + \"/{\" + idProp + \"}\");\n\treturn [itemUrl, listUrl];\n}\n\nfunction addStoreFixture (root, store) {\n\tvar settings = {};\n\tvar typeAndUrl = getMethodAndPath(root);\n\tvar type = typeAndUrl[0];\n\tvar url = typeAndUrl[1];\n\n\tvar itemAndListUrls = getItemAndListUrls(url, store.idProp);\n\tvar itemUrl = itemAndListUrls[0];\n\tvar listUrl = itemAndListUrls[1];\n\n\tif (type) {\n\t\tvar warning = [\n\t\t\t'fixture(\"' + root + '\", fixture) must use a store method, not a store directly.',\n\t\t];\n\t\tif (itemUrl) {\n\t\t\tvar itemAction = methodMapping.item[type];\n\t\t\tif (itemAction) {\n\t\t\t\tsettings[type + ' ' + itemUrl] = store[itemAction];\n\t\t\t\tvar itemWarning = 'Replace with fixture(\"' + type + ' ' + itemUrl + '\", fixture.' + itemAction + ') for items.';\n\t\t\t\twarning.push(itemWarning);\n\t\t\t}\n\t\t}\n\t\tvar listAction = methodMapping.list[type];\n\t\tif (listAction) {\n\t\t\tsettings[type + ' ' + listUrl] = store[listAction];\n\t\t\tvar listWarning = 'Replace with fixture(\"' + type + ' ' + listUrl + '\", fixture.' + listAction + ') for lists.';\n\t\t\twarning.push(listWarning);\n\t\t}\n\t\tvar message = warning.join(' ');\n\t\tcanDev.warn(message);\n\t} else {\n\t\tvar itemMapping = methodMapping.item;\n\t\tfor (var itemMethod in itemMapping) {\n\t\t\tvar storeItemMethod = itemMapping[itemMethod];\n\t\t\tsettings[itemMethod + ' ' + itemUrl] = store[storeItemMethod];\n\t\t}\n\t\tvar listMapping = methodMapping.list;\n\t\tfor (var listMethod in listMapping) {\n\t\t\tvar storeListMethod = listMapping[listMethod];\n\t\t\tsettings[listMethod + ' ' + listUrl] = store[storeListMethod];\n\t\t}\n\t}\n\n\treturn settings;\n}\n\nfunction getSettingsFromString (route) {\n\tvar typeAndUrl = getMethodAndPath(route);\n\tvar type = typeAndUrl[0];\n\tvar url = typeAndUrl[1];\n\tif (type) {\n\t\treturn {\n\t\t\ttype: type,\n\t\t\turl: url\n\t\t};\n\t}\n\treturn {\n\t\turl: url\n\t};\n}\n\n// Check if the same fixture was previously added, if so, we remove it\n// from our array of fixture overwrites.\nfunction upsertFixture (fixtureList, settings, fixture) {\n\tvar index = exports.index(settings, true);\n\tif (index > -1) {\n\t\tfixtures.splice(index, 1);\n\t}\n\tif (fixture == null) {\n\t\treturn;\n\t}\n\tif(typeof fixture === \"object\") {\n\t\tvar data = fixture;\n\t\tfixture = function(){\n\t\t\treturn data;\n\t\t};\n\t}\n\tsettings.fixture = fixture;\n\tfixtures.unshift(settings);\n}\n\n// Adds a fixture to the list of fixtures.\nexports.add = function (settings, fixture) {\n\t// If a fixture isn't provided, we assume that settings is\n\t// an array of fixtures, and we should iterate over it, and set up\n\t// the new fixtures.\n\tif (fixture === undefined) {\n\t\tcanReflect.eachKey(settings, function (fixture, url) {\n\t\t\texports.add(url, fixture);\n\t\t});\n\t\treturn;\n\t}\n\n\t// When a fixture is passed a store like:\n\t// `fixture(\"/things/{id}\", store)`\n\tif (isStoreLike(fixture)) {\n\t\tsettings = addStoreFixture(settings, fixture);\n\t\texports.add(settings);\n\t\treturn;\n\t}\n\n\tif (typeof settings === 'string') {\n\t\tsettings = getSettingsFromString(settings);\n\t}\n\tupsertFixture(fixtures, settings, fixture);\n};\n\nvar $fixture = exports.add;\n$fixture.on = true;\n$fixture.delay =10;\n\nfunction FixtureResponse(fixture, response){\n\tthis.statusCode= response[0];\n\tthis.responseBody= response[1];\n\tthis.headers= response[2];\n\tthis.statusText= response[3];\n\tthis.fixture= fixture;\n}\n\n// Calls a dynamic fixture and calls `cb` with the response data.\nexports.callDynamicFixture = function(xhrSettings, fixtureSettings, cb){\n\t// this is for legacy.  In the future, people should get it from fixtureSettings probably.\n\txhrSettings.data = fixtureSettings.data;\n\n\t//!steal-remove-start\n\tif(process.env.NODE_ENV !== 'production') {\n\t\tvar json = JSON.stringify(xhrSettings.data);\n\t\tcanLog.log(\"\" + xhrSettings.type.toUpperCase() + \" \" + xhrSettings.url+\" \"+json.substr(0,50)+\" -> handler(req,res)\");\n\t}\n\t//!steal-remove-end\n\n\tvar response = function(){\n\t\tvar res = exports.extractResponse.apply(xhrSettings, arguments);\n\t\t//!steal-remove-start\n\t\tcanLog.log(\"can-fixture: \" + xhrSettings.type.toUpperCase() + \" \" + xhrSettings.url+\" \",xhrSettings.data,\" => \",new FixtureResponse(fixtureSettings.fixture,res));\n\t\t//!steal-remove-end\n\t\treturn cb.apply(this, res);\n\t};\n\tvar callFixture = function () {\n\t\t// fall the fixture\n\t\tvar result = fixtureSettings.fixture(xhrSettings, response, xhrSettings.headers, fixtureSettings);\n\n\t\tif (result !== undefined) {\n\t\t\t// Resolve with fixture results\n\t\t\tresponse(200, result );\n\t\t}\n\t};\n\n\tif(!xhrSettings.async) {\n\t\tcallFixture();\n\t\treturn null;\n\t} else {\n\t\treturn setTimeout(callFixture, $fixture.delay);\n\t}\n};\n\nexports.index = function (settings, exact) {\n\tfor (var i = 0; i < fixtures.length; i++) {\n\t\tif (matches.matches(settings, fixtures[i], exact)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nexports.get = function(xhrSettings) {\n\tif ( !$fixture.on ) {\n\t\treturn;\n\t}\n\t// First try an exact match\n\tvar index = exports.index(xhrSettings, true);\n\n\t// If that doesn't work, try a looser match.\n\tif(index === -1) {\n\t\tindex = exports.index(xhrSettings, false);\n\t}\n\n\tvar fixtureSettings = index >=0 ? canReflect.assignMap({},fixtures[index]) : undefined;\n\tif(fixtureSettings) {\n\t\tvar url = fixtureSettings.fixture,\n\t\t\tdata = dataFromUrl(fixtureSettings.url, xhrSettings.url);\n\t\tif(typeof fixtureSettings.fixture === \"string\") {\n\t\t\t// check that we might have a replacement\n\n\t\t\t// here we could read data from first url and translate into next\n\t\t\tif (data) {\n\t\t\t\t// Template static fixture URLs\n\t\t\t\turl = sub(url, data);\n\t\t\t}\n\n\t\t\t// Override the AJAX settings, changing the URL to the fixture file,\n\t\t\t// removing the data, and changing the type to GET.\n\t\t\tfixtureSettings.url = url;\n\t\t\tfixtureSettings.data = null;\n\t\t\tfixtureSettings.type = \"GET\";\n\t\t\tif (!fixtureSettings.error) {\n\t\t\t\t// If no error handling is provided, we provide one and throw an\n\t\t\t\t// error.\n\t\t\t\tfixtureSettings.error = function (xhr, error, message) {\n\t\t\t\t\tthrow \"fixtures.js Error \" + error + \" \" + message;\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (canReflect.isPlainObject(xhrSettings.data) || xhrSettings.data == null) {\n\t\t\tvar xhrData = canReflect.assignMap({}, xhrSettings.data || {});\n\t\t\tfixtureSettings.data = canReflect.assignMap(xhrData, data);\n\n\t\t} else {\n\t\t\tfixtureSettings.data = xhrSettings.data;\n\t\t}\n\t}\n\n\treturn fixtureSettings;\n};\n\nexports.matches = matches;\n\n\n\n\n// A helper function that takes what's called with response\n// and moves some common args around to make it easier to call\nexports.extractResponse = function (status, response, headers, statusText) {\n\t// if we get response(RESPONSE, HEADERS)\n\tif (typeof status !== \"number\") {\n\t\theaders = response;\n\t\tresponse = status;\n\t\tstatus = 200;\n\t}\n\t// if we get response(200, RESPONSE, STATUS_TEXT)\n\tif (typeof headers === \"string\") {\n\t\tstatusText = headers;\n\t\theaders = {};\n\t}\n\treturn [status, response, headers, statusText];\n};\n"],"names":["str","data","remove","obs","push","replace","utils","strReplacer","whole","inside","ob","get","deleteKey","canReflect","isPrimitive","length","replacer","fixtureUrl","url","order","fixtureUrlAdjusted","res","RegExp","part","exec","shift","forEach","name","deepMatches","a","b","Array","isArray","every","aVal","i","isPlainObject","prop","hasOwnProperty","removeFixtureAndXHR","query","fixture","xhr","clone","serialize","identityIntersection","v1","v2","value","set","EMPTY","identityDifference","identityUnion","UNDEFINABLE","identityComparitor","intersection","difference","union","makeComparatorType","compare","Type","SetType","this","prototype","isMember","root","keys","assignSymbols","can.SetType","defineComparison","UNIVERSAL","quickEqual","queryA","queryB","dataA","dataB","q1","QueryLogic","KeysAnd","q2","isEqual","quickSubset","isSubset","types","eachKey","IsEmptyOrNull","size","isEmptyOrSubset","TemplateUrl","dataFromUrl","StringIgnoreCase","toLowerCase","Ignore","schema","identity","type","method","helpers","headers","IsEmptyOrSubset","request","requestData","fixtureData","filter","matches","settings","exact","connectToConnection","convert","req","connection","call","then","err","parseInt","status","makeMakeItems","baseItems","idProp","items","maxId","item","Math","max","stringToAny","val","isNaN","Store","makeItems","queryLogic","identityKey","console","warn","reset","bind","doNotConvert","v","typeConvert","copy","key","looksLikeAQueryLogic","obj","assignMap","getListData","getData","createData","createInstance","record","updateData","updateInstance","destroyInstance","destroyData","newItems","itemData","updateListData","params","id","memberIdentity","getRecord","getList","getListDataSync","make","count","identityKeys","memoryStore","errorOnMissingRecord","fixtures","exports","methodMapping","GET","PUT","DELETE","list","POST","getMethodAndPath","route","match","undefined","addStoreFixture","store","typeAndUrl","itemAndListUrls","inferIdProp","itemRegex","rootIsItemUrl","test","listUrl","trim","getItemAndListUrls","itemUrl","warning","itemAction","itemWarning","listAction","listWarning","message","join","canDev","itemMapping","itemMethod","storeItemMethod","listMapping","listMethod","storeListMethod","isStoreLike","add","fixtureList","index","splice","unshift","upsertFixture","$fixture","FixtureResponse","response","statusCode","responseBody","statusText","on","delay","xhrSettings","fixtureSettings","cb","process","env","NODE_ENV","json","JSON","stringify","canLog","log","toUpperCase","substr","extractResponse","apply","arguments","callFixture","result","async","setTimeout","sub","error","xhrData"],"mappings":"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"}