{"version":3,"file":"chunk-f0afc07a.js","sources":["../node_modules/can-key/replace-with/replace-with.js"],"sourcesContent":["\"use strict\";\nvar utils = require(\"../utils\");\nvar get = require(\"../get/get\");\nvar deleteKey = require(\"../delete/delete\");\n/**\n * @module {function} can-key/replace-with/replace-with\n * @parent can-key\n *\n * Replace the templated parts of a string with values from an object.\n *\n * @signature `replaceWith(str, data, replacer, remove)`\n *\n * ```js\n * import replaceWith from \"can-key/replace-with/replace-with\";\n *\n * replaceWith(\"foo_{bar}\", {bar: \"baz\"}); // -> \"foo_baz\"\n * ```\n *\n * @param {String} str String with {curly brace} delimited property names.\n * @param {Object} data Object from which to read properties.\n * @param {function(String,*)} [replacer(key,value)] Function which returns string replacements.  Optional.\n *\n *   ```js\n *   replaceWith(\"foo_{bar}\", {bar: \"baz\"}, (key, value) => {\n *     return value.toUpperCase();\n *   }); // -> \"foo_BAZ\"\n *   ```\n *\n *\n * @param {Boolean} shouldRemoveMatchedPaths Whether to remove properties\n * found in delimiters in `str` from `data`.\n * @return {String} the supplied string with delimited properties replaced with their values.\n *\n * @body\n *\n * ```js\n * var replaceWith = require(\"can-key/replace-with/replace-with\");\n * var answer = replaceWith(\n *   '{.}{.}{.}{.}{.} Batman!',\n *   {},\n *   () => 'Na'\n * );\n * // => 'NaNaNaNaNa Batman!'\n * ```\n */\nmodule.exports = function (str, data, replacer, shouldRemoveMatchedPaths) {\n    return str.replace(utils.strReplacer, function (whole, path) {\n        var value = get(data, path);\n        if(shouldRemoveMatchedPaths) {\n            deleteKey(data, path);\n        }\n        return replacer ? replacer(path, value) : value;\n    });\n};\n"],"names":["str","data","replacer","shouldRemoveMatchedPaths","replace","utils","strReplacer","whole","path","value","get","deleteKey"],"mappings":"2GA6CA,gBAAiB,SAAUA,EAAKC,EAAMC,EAAUC,GAC5C,OAAOH,EAAII,QAAQC,YAAMC,YAAa,SAAUC,EAAOC,GACnD,IAAIC,EAAQC,IAAIT,EAAMO,GAItB,OAHGL,GACCQ,UAAUV,EAAMO,GAEbN,EAAWA,EAASM,EAAMC,GAASA"}