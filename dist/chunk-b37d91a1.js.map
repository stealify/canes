{"version":3,"file":"chunk-b37d91a1.js","sources":["../node_modules/can-symbol/can-symbol.js"],"sourcesContent":["var namespace = require(\"can-namespace\");\n\nvar CanSymbol;\nif(typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n\tCanSymbol = Symbol;\n} else {\n\n\tvar symbolNum = 0;\n\tCanSymbol = function CanSymbolPolyfill(description){\n\t\tvar symbolValue = \"@@symbol\"+(symbolNum++)+(description);\n\n\t\tvar symbol = {}; // make it object type\n\n\t\tObject.defineProperties(symbol, {\n\t\t\ttoString: {\n\t\t\t\tvalue: function(){\n\t\t\t\t\treturn symbolValue;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn symbol;\n\t};\n\n\tvar descriptionToSymbol = {};\n\tvar symbolToDescription = {};\n\n\t/**\n\t * @function can-symbol.for for\n\t * @parent  can-symbol/methods\n\t * @description  Get a symbol based on a known string identifier, or create it if it doesn't exist.\n\t *\n\t * @signature `canSymbol.for(String)`\n\t *\n\t * @param { String } description  The string value of the symbol\n\t * @return { CanSymbol } The globally unique and consistent symbol with the given string value.\n\t */\n\tCanSymbol.for = function(description){\n\t\tvar symbol = descriptionToSymbol[description];\n\t\tif(!symbol) {\n\t\t\tsymbol = descriptionToSymbol[description] = CanSymbol(description);\n\t\t\tsymbolToDescription[symbol] = description;\n\t\t}\n\t\treturn symbol;\n\t};\n\t/**\n\t * @function can-symbol.keyFor keyFor\n\t * @parent  can-symbol\n\t * @description  Get the description for a symbol.\n\t *\n\t * @signature `canSymbol.keyFor(CanSymbol)`\n\t *\n\t * @param { String } description  The string value of the symbol\n\t * @return { CanSymbol } The globally unique and consistent symbol with the given string value.\n\t */\n\tCanSymbol.keyFor = function(symbol) {\n\t\treturn symbolToDescription[symbol];\n\t};\n\t[\"hasInstance\",\"isConcatSpreadable\",\n\t\t\"iterator\",\"match\",\"prototype\",\"replace\",\"search\",\"species\",\"split\",\n\t\"toPrimitive\",\"toStringTag\",\"unscopables\"].forEach(function(name){\n\t\tCanSymbol[name] = CanSymbol(\"Symbol.\"+name);\n\t});\n}\n\n// Generate can. symbols.\n[\n\t// ======= Type detection ==========\n\t\"isMapLike\",\n\t\"isListLike\",\n\t\"isValueLike\",\n\t\"isFunctionLike\",\n\t// ======= Shape detection =========\n\t\"getOwnKeys\",\n\t\"getOwnKeyDescriptor\",\n\t\"proto\",\n\t// optional\n\t\"getOwnEnumerableKeys\",\n\t\"hasOwnKey\",\n\t\"hasKey\",\n\t\"size\",\n\t\"getName\",\n\t\"getIdentity\",\n\n\t// shape manipulation\n\t\"assignDeep\",\n\t\"updateDeep\",\n\n\t// ======= GET / SET\n\t\"getValue\",\n\t\"setValue\",\n\t\"getKeyValue\",\n\t\"setKeyValue\",\n\t\"updateValues\",\n\t\"addValue\",\n\t\"removeValues\",\n\t// ======= Call =========\n\t\"apply\",\n\t\"new\",\n\t// ======= Observe =========\n\t\"onValue\",\n\t\"offValue\",\n\t\"onKeyValue\",\n\t\"offKeyValue\",\n\t\"getKeyDependencies\",\n\t\"getValueDependencies\",\n\t\"keyHasDependencies\",\n\t\"valueHasDependencies\",\n\t\"onKeys\",\n\t\"onKeysAdded\",\n\t\"onKeysRemoved\",\n\t\"onPatches\"\n\t].forEach(function(name){\n\tCanSymbol.for(\"can.\"+name);\n});\n\nmodule.exports = namespace.Symbol = CanSymbol;\n"],"names":["CanSymbol","Symbol","for","symbolNum","descriptionToSymbol","symbolToDescription","description","symbolValue","symbol","Object","defineProperties","toString","value","keyFor","forEach","name","namespace"],"mappings":"4EAEA,IAAIA,UACJ,GAAqB,oBAAXC,QAAgD,mBAAfA,OAAOC,IACjDF,UAAYC,WACN,CAEN,IAAIE,UAAY,EAiBZC,oBAAsB,GACtBC,oBAAsB,IAjB1BL,UAAY,SAA2BM,GACtC,IAAIC,EAAc,WAAYJ,cAE1BK,EAAS,GAUb,OARAC,OAAOC,iBAAiBF,EAAQ,CAC/BG,SAAU,CACTC,MAAO,WACN,OAAOL,MAKHC,IAgBEN,IAAM,SAASI,GACxB,IAAIE,EAASJ,oBAAoBE,GAKjC,OAJIE,IACHA,EAASJ,oBAAoBE,GAAeN,UAAUM,GACtDD,oBAAoBG,GAAUF,GAExBE,GAYRR,UAAUa,OAAS,SAASL,GAC3B,OAAOH,oBAAoBG,IAE5B,CAAC,cAAc,qBACd,WAAW,QAAQ,YAAY,UAAU,SAAS,UAAU,QAC7D,cAAc,cAAc,eAAeM,QAAQ,SAASC,GAC3Df,UAAUe,GAAQf,UAAU,UAAUe,KAKxC,CAEC,YACA,aACA,cACA,iBAEA,aACA,sBACA,QAEA,uBACA,YACA,SACA,OACA,UACA,cAGA,aACA,aAGA,WACA,WACA,cACA,cACA,eACA,WACA,eAEA,QACA,MAEA,UACA,WACA,aACA,cACA,qBACA,uBACA,qBACA,uBACA,SACA,cACA,gBACA,aACED,QAAQ,SAASC,GACnBf,UAAUE,IAAI,OAAOa,KAGtB,cAAiBC,UAAUf,OAASD"}