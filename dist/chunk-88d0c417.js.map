{"version":3,"file":"chunk-88d0c417.js","sources":["../node_modules/can-deparam/can-deparam.js"],"sourcesContent":["\"use strict\";\nvar namespace = require(\"can-namespace\");\n\n/**\n * @module {function} can-deparam can-deparam\n * @parent can-routing\n * @collection can-infrastructure\n * @package ./package.json\n * @description Deserialize a query string into an array or object.\n * @signature `deparam(params)`\n *\n * @param {String} params A form-urlencoded string of key-value pairs.\n * @param {function} [valueDeserializer] A function that decodes the string values. For example, using\n * [can-string-to-any] will convert `\"null\"` to `null` like:\n *\n *   ```js\n *   import stringToAny from \"can-string-to-any\";\n *   deparam(\"value=null\", stringToAny) //-> {value: null}\n *   ```\n * @return {Object} The params formatted into an object\n *\n * Takes a string of name value pairs and returns a Object literal that represents those params.\n *\n * ```js\n * var deparam = require(\"can-deparam\");\n *\n * console.log(JSON.stringify(deparam(\"?foo=bar&number=1234\"))); // -> '{\"foo\" : \"bar\", \"number\": 1234}'\n * console.log(JSON.stringify(deparam(\"#foo[]=bar&foo[]=baz\"))); // -> '{\"foo\" : [\"bar\", \"baz\"]}'\n * console.log(JSON.stringify(deparam(\"foo=bar%20%26%20baz\"))); // -> '{\"foo\" : \"bar & baz\"}'\n * ```\n * @body\n *\n * ## Try it\n *\n * Use this JS Bin to play around with this package:\n *\n * <a class=\"jsbin-embed\" href=\"https://jsbin.com/mobimok/3/embed?js,console\">can-deparam on jsbin.com</a>\n * <script src=\"https://static.jsbin.com/js/embed.min.js?4.0.4\"></script>\n */\nvar digitTest = /^\\d+$/,\n\tkeyBreaker = /([^\\[\\]]+)|(\\[\\])/g,\n\tparamTest = /([^?#]*)(#.*)?$/,\n\tentityRegex = /%([^0-9a-f][0-9a-f]|[0-9a-f][^0-9a-f]|[^0-9a-f][^0-9a-f])/i,\n\tprep = function (str) {\n\t\tstr = str.replace(/\\+/g, ' ');\n\n\t\ttry {\n\t\t\treturn decodeURIComponent(str);\n\t\t}\n\t\tcatch (e) {\n\t\t\treturn decodeURIComponent(str.replace(entityRegex, function(match, hex) {\n\t\t\t\treturn '%25' + hex;\n\t\t\t}));\n\t\t}\n\t};\n\nfunction isArrayLikeName(name) {\n\treturn digitTest.test(name) || name === '[]';\n}\n\n\nfunction idenity(value){ return value; }\n\nmodule.exports = namespace.deparam = function (params, valueDeserializer) {\n\tvalueDeserializer = valueDeserializer || idenity;\n\tvar data = {}, pairs, lastPart;\n\tif (params && paramTest.test(params)) {\n\t\tpairs = params.split('&');\n\t\tpairs.forEach(function (pair) {\n\t\t\tvar parts = pair.split('='),\n\t\t\t\tkey = prep(parts.shift()),\n\t\t\t\tvalue = prep(parts.join('=')),\n\t\t\t\tcurrent = data;\n\t\t\tif (key) {\n\t\t\t\tparts = key.match(keyBreaker);\n\t\t\t\tfor (var j = 0, l = parts.length - 1; j < l; j++) {\n\t\t\t\t\tvar currentName = parts[j],\n\t\t\t\t\t\tnextName = parts[j + 1],\n\t\t\t\t\t\tcurrentIsArray = isArrayLikeName(currentName) && current instanceof Array;\n\t\t\t\t\tif (!current[currentName]) {\n\t\t\t\t\t\tif(currentIsArray) {\n\t\t\t\t\t\t\tcurrent.push( isArrayLikeName(nextName) ? [] : {} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If what we are pointing to looks like an `array`\n\t\t\t\t\t\t\tcurrent[currentName] = isArrayLikeName(nextName) ? [] : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif(currentIsArray) {\n\t\t\t\t\t\tcurrent = current[current.length - 1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrent = current[currentName];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tlastPart = parts.pop();\n\t\t\t\tif ( isArrayLikeName(lastPart) ) {\n\t\t\t\t\tcurrent.push(valueDeserializer(value));\n\t\t\t\t} else {\n\t\t\t\t\tcurrent[lastPart] = valueDeserializer(value);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn data;\n};\n"],"names":["digitTest","keyBreaker","paramTest","entityRegex","prep","str","replace","decodeURIComponent","e","match","hex","isArrayLikeName","name","test","idenity","value","namespace","deparam","params","valueDeserializer","lastPart","data","split","forEach","pair","parts","key","shift","join","current","j","l","length","currentName","nextName","currentIsArray","Array","push","pop"],"mappings":"4EAuCA,IAAIA,UAAY,QACfC,WAAa,qBACbC,UAAY,kBACZC,YAAc,6DACdC,KAAO,SAAUC,GAChBA,EAAMA,EAAIC,QAAQ,MAAO,KAEzB,IACC,OAAOC,mBAAmBF,GAE3B,MAAOG,GACN,OAAOD,mBAAmBF,EAAIC,QAAQH,YAAa,SAASM,EAAOC,GAClE,MAAO,MAAQA,OAKnB,SAASC,gBAAgBC,GACxB,OAAOZ,UAAUa,KAAKD,IAAkB,OAATA,EAIhC,SAASE,QAAQC,GAAQ,OAAOA,EAEhC,eAAiBC,UAAUC,QAAU,SAAUC,EAAQC,GACtDA,EAAoBA,GAAqBL,QACzC,IAAsBM,EAAlBC,EAAO,GAuCX,OAtCIH,GAAUhB,UAAUW,KAAKK,IACpBA,EAAOI,MAAM,KACfC,QAAQ,SAAUC,GACvB,IAAIC,EAAQD,EAAKF,MAAM,KACtBI,EAAMtB,KAAKqB,EAAME,SACjBZ,EAAQX,KAAKqB,EAAMG,KAAK,MACxBC,EAAUR,EACX,GAAIK,EAAK,CAER,IAAK,IAAII,EAAI,EAAGC,GADhBN,EAAQC,EAAIjB,MAAMR,aACQ+B,OAAS,EAAGF,EAAIC,EAAGD,IAAK,CACjD,IAAIG,EAAcR,EAAMK,GACvBI,EAAWT,EAAMK,EAAI,GACrBK,EAAiBxB,gBAAgBsB,IAAgBJ,aAAmBO,MAChEP,EAAQI,KACTE,EACFN,EAAQQ,KAAM1B,gBAAgBuB,GAAY,GAAK,IAG/CL,EAAQI,GAAetB,gBAAgBuB,GAAY,GAAK,IAKzDL,EADEM,EACQN,EAAQA,EAAQG,OAAS,GAEzBH,EAAQI,GAKftB,gBADLS,EAAWK,EAAMa,OAEhBT,EAAQQ,KAAKlB,EAAkBJ,IAE/Bc,EAAQT,GAAYD,EAAkBJ,MAKnCM"}