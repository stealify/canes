import{a as process$1}from"./chunk-bacf0c54.mjs";import"./chunk-5f1245ff.mjs";import"./chunk-2c9f11a8.mjs";import{a as canSymbol}from"./chunk-b37d91a1.mjs";import{a as diff}from"./chunk-3f0a7243.mjs";import"./chunk-862b179d.mjs";import{a as canReflect}from"./chunk-7e0220de.mjs";import{a as KeyTree}from"./chunk-8d049599.mjs";import{a as queues}from"./chunk-12ed728f.mjs";var onValueSymbol=canSymbol.for("can.onValue"),offValueSymbol=canSymbol.for("can.offValue"),onPatchesSymbol=canSymbol.for("can.onPatches"),offPatchesSymbol=canSymbol.for("can.offPatches"),Patcher=function(t,e){this.handlers=new KeyTree([Object,Array],{onFirst:this.setup.bind(this),onEmpty:this.teardown.bind(this)}),this.observableOrList=t,this.isObservableValue=canReflect.isValueLike(this.observableOrList)||canReflect.isObservableLike(this.observableOrList),this.isObservableValue?this.priority=canReflect.getPriority(t):this.priority=e||0,this.onList=this.onList.bind(this),this.onPatchesNotify=this.onPatchesNotify.bind(this),this.onPatchesDerive=this.onPatchesDerive.bind(this),this.patches=[],"production"!==process$1.env.NODE_ENV&&(Object.defineProperty(this.onList,"name",{value:"live.list new list::"+canReflect.getName(t)}),Object.defineProperty(this.onPatchesNotify,"name",{value:"live.list notify::"+canReflect.getName(t)}),Object.defineProperty(this.onPatchesDerive,"name",{value:"live.list derive::"+canReflect.getName(t)}))};Patcher.prototype={constructor:Patcher,setup:function(){this.observableOrList[onValueSymbol]?(canReflect.onValue(this.observableOrList,this.onList,"notify"),this.setupList(canReflect.getValue(this.observableOrList))):this.setupList(this.observableOrList)},teardown:function(){this.observableOrList[offValueSymbol]&&canReflect.offValue(this.observableOrList,this.onList,"notify")},setupList:function(t){this.currentList=t,t&&t[onPatchesSymbol]&&t[onPatchesSymbol](this.onPatchesNotify,"notify")},onList:function(t){var e=this.currentList||[];t=t||[],e[offPatchesSymbol]&&e[offPatchesSymbol](this.onPatchesNotify,"notify");var s=diff(e,t);this.currentList=t,this.onPatchesNotify(s),t[onPatchesSymbol]&&t[onPatchesSymbol](this.onPatchesNotify,"notify")},onPatchesNotify:function(t){this.patches.push.apply(this.patches,t),queues.deriveQueue.enqueue(this.onPatchesDerive,this,[],{priority:this.priority})},onPatchesDerive:function(){var t=this.patches;this.patches=[],queues.enqueueByQueue(this.handlers.getNode([]),this.currentList,[t,this.currentList],null,["Apply patches",t])}},canReflect.assignSymbols(Patcher.prototype,{"can.onPatches":function(t,e){this.handlers.add([e||"mutate",t])},"can.offPatches":function(t,e){this.handlers.delete([e||"mutate",t])}});var patcher=Patcher;export{patcher as a};
//# sourceMappingURL=chunk-bb7c303b.js.map
