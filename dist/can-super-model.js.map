{"version":3,"file":"can-super-model.js","sources":["../node_modules/can-super-model/can-super-model.js"],"sourcesContent":["var connect = require(\"can-connect\");\n\nvar connectConstructor = require(\"can-connect/constructor/constructor\");\nvar canMap = require(\"can-connect/can/map/map\");\nvar canRef = require(\"can-connect/can/ref/ref\");\nvar constructorStore = require(\"can-connect/constructor/store/store\");\nvar dataCallbacks = require(\"can-connect/data/callbacks/callbacks\");\nvar callbacksCache = require(\"can-connect/data/callbacks-cache/callbacks-cache\");\nvar combineRequests = require(\"can-connect/data/combine-requests/combine-requests\");\nvar localCache = require(\"can-connect/data/localstorage-cache/localstorage-cache\");\nvar dataParse = require(\"can-connect/data/parse/parse\");\nvar dataUrl = require(\"can-connect/data/url/url\");\nvar fallThroughCache = require(\"can-connect/fall-through-cache/fall-through-cache\");\nvar realTime = require(\"can-connect/real-time/real-time\");\nvar callbacksOnce = require(\"can-connect/constructor/callbacks-once/callbacks-once\");\nvar namespace = require(\"can-namespace\");\nvar canReflect = require(\"can-reflect\");\nvar QueryLogic = require(\"can-query-logic\");\n\nfunction superModel(options){\n    options = canReflect.assignDeep({},options);\n\n    if(!options.name) {\n        options.name = canReflect.getName(options.Map)+\".connection\";\n    }\n    if(!options.queryLogic) {\n        options.queryLogic = new QueryLogic(options.Map);\n    }\n\n\tvar behaviors = [\n\t\tconnectConstructor,\n\t\tcanMap,\n\t\tcanRef,\n\t\tconstructorStore,\n\t\tdataCallbacks,\n\t\tcombineRequests,\n\t\tdataParse,\n\t\tdataUrl,\n\t\trealTime,\n\t\tcallbacksOnce];\n\n\tif(typeof localStorage !== \"undefined\") {\n\t\tif(!options.cacheConnection) {\n\t\t\toptions.cacheConnection = connect([localCache],{\n\t\t\t\tname: options.name+\".cacheConnection\",\n\t\t\t\tidProp: options.idProp,\n\t\t\t\tqueryLogic: options.queryLogic\n\t\t\t});\n\t\t}\n\t\tbehaviors.push(callbacksCache,fallThroughCache);\n\t}\n\treturn connect(behaviors,options);\n}\n\nmodule.exports = namespace.superModel = superModel;\n"],"names":["superModel","options","canReflect","assignDeep","name","getName","Map","queryLogic","QueryLogic","behaviors","connectConstructor","canMap","canRef","constructorStore","dataCallbacks","combineRequests","dataParse","dataUrl","realTime","callbacksOnce","localStorage","cacheConnection","connect","localCache","idProp","push","callbacksCache","fallThroughCache","namespace"],"mappings":"g/DAmBA,SAASA,WAAWC,IAChBA,EAAUC,WAAWC,WAAW,GAAGF,IAEvBG,OACRH,EAAQG,KAAOF,WAAWG,QAAQJ,EAAQK,KAAK,eAE/CL,EAAQM,aACRN,EAAQM,WAAa,IAAIC,WAAWP,EAAQK,MAGnD,IAAIG,EAAY,CACfC,mBACAC,OACAC,OACAC,iBACAC,cACAC,gBACAC,UACAC,QACAC,SACAC,eAYD,MAV2B,oBAAjBC,eACLnB,EAAQoB,kBACXpB,EAAQoB,gBAAkBC,QAAQ,CAACC,YAAY,CAC9CnB,KAAMH,EAAQG,KAAK,mBACnBoB,OAAQvB,EAAQuB,OAChBjB,WAAYN,EAAQM,cAGtBE,EAAUgB,KAAKC,eAAeC,mBAExBL,QAAQb,EAAUR,GAG1B,kBAAiB2B,UAAU5B,WAAaA"}