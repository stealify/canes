import{a as require$$0}from"./chunk-c81214db.mjs";import"./chunk-bd824939.mjs";import{a as assign}from"./chunk-75bea8d8.mjs";import"./chunk-b09dcf0e.mjs";import"./chunk-5f1245ff.mjs";import"./chunk-b37d91a1.mjs";import"./chunk-805ffcb4.mjs";import"./chunk-3b4c7b38.mjs";import"./chunk-bacf0c54.mjs";import"./chunk-7e0220de.mjs";import"./chunk-849fe8d8.mjs";import"./chunk-0826a8c3.mjs";import"./chunk-b1806013.mjs";import"./chunk-d2889630.mjs";import"./chunk-585d4076.mjs";import"./chunk-723b8216.mjs";import"./chunk-f81ff71d.mjs";import"./chunk-b52ac488.mjs";import"./chunk-d7d8317e.mjs";import"./chunk-eae5b219.mjs";import"./chunk-a661b1ce.mjs";var extractResponse=require$$0.extractResponse;function requestHandlerToListener(e){return function(t,r){e({data:t},function(){var e=extractResponse.apply(null,arguments);200===e[0]?r(null,e[1]):r(e[1])})}}function storeToListeners(e){return["getListData","getData","updateData","createData","destroyData"].reduce(function(t,r){return t[r]=requestHandlerToListener(e[r]),t},{})}var store={requestHandlerToListener:requestHandlerToListener,storeToListeners:storeToListeners},storeToListeners$1=store.storeToListeners;function subscribeFeathersStoreToServer(e,t,r,n){var o=storeToListeners$1(t);r.on(e+"::find",toFeathersDataHandler(o.getListData,null,toFeathersFind)),r.on(e+"::get",toFeathersDataHandler(o.getData,wrapToId(n),null)),r.on(e+"::remove",toFeathersRemoveHandler(o.getData,o.destroyData,n)),r.on(e+"::create",toFeathersCreateHandler(o.createData)),r.on(e+"::update",toFeathersUpdateHandler(o.updateData,n))}function toFeathersDataHandler(e,t,r){return function(n){var o,s=Array.prototype.slice.call(arguments);"function"==typeof s[s.length-1]&&(o=s[s.length-1]),n=t?t(n):n,e(n,function(e,t){e?o&&o(e):(t=r?r(t):t,o&&o(null,t))})}}function wrapToId(e){return function(t){var r={};return r[e&&e.id||"id"]=t,r}}function toFeathersFind(e){return{total:e.count,limit:e.limit,skip:e.offset,data:e.data}}function toFeathersRemoveHandler(e,t,r){return function(n,o,s){var a=wrapToId(r)(n);e(a,function(e,r){e?s(e):t(a,function(e,t){e?s(e):s(null,r)})})}}function toFeathersUpdateHandler(e,t){return function(r,n,o,s){var a=wrapToId(t)(r);e(assign(a,n),function(e,t){e?s(e):s(null,assign(a,assign(n,t)))})}}function toFeathersCreateHandler(e){return function(t,r,n){e(t,function(e,r){e?n(e):n(null,assign(t,r))})}}var feathersClient={subscribeFeathersStoreToServer:subscribeFeathersStoreToServer},subscribeFeathersStoreToServer$1=feathersClient.subscribeFeathersStoreToServer,MockedServer=function(e){this.io=e,this.events={},this.subscribers={},resetManagerCache(e.managers),this.origs=mockManager(e.Manager.prototype,this)};MockedServer.prototype.on=function(e,t){var r=this,n={};"string"==typeof e&&(n[e]=t),"object"==typeof e&&(n=e),Object.keys(n).forEach(function(e){sub(r.events,e,n[e])})},MockedServer.prototype.emit=function(e){var t=Array.prototype.slice.call(arguments,1);pub(this.subscribers,e,t)},MockedServer.prototype.onFeathersService=function(e,t,r){subscribeFeathersStoreToServer$1(e,t,this,r)},MockedServer.prototype.restore=function(){restoreManager(this.io.Manager.prototype,this.origs),resetManagerCache(this.io.managers)};var MockedSocket=function(e){this._server=e,this.io={engine:this}};function pub(e,t,r){(e[t]||[]).forEach(function(e){e.apply(null,r)})}function sub(e,t,r){e[t]||(e[t]=[]),e[t].push(r)}function unsub(e,t,r){e[t].forEach(function(n,o){n===r&&e[t].splice(o,1)})}function mockManager(e,t){var r=["open","socket"].map(function(t){return{name:t,method:e[t]}});return e.open=e.connect=function(){setTimeout(function(){pub(t.subscribers,"connect"),pub(t.events,"connection")},0)},e.socket=function(){var e=new MockedSocket(t);return e.connected=!0,e.disconnected=!1,e},r}function restoreManager(e,t){t.forEach(function(t){e[t.name]=t.method})}function resetManagerCache(e){for(var t in e)e.hasOwnProperty(t)&&delete e[t]}MockedSocket.prototype={on:function(e,t){sub(this._server.subscribers,e,t)},emit:function(e){var t=Array.prototype.slice.call(arguments,1);pub(this._server.events,e,t)},once:function(){},off:function(e,t){unsub(this._server.subscribers,e,t)},open:function(){return this.connect()},connect:function(){this.connected=!0,this.disconnected=!1},close:function(){return this.disconnect()},disconnect:function(){this.connected=!1,this.disconnected=!0}};var src={Server:MockedServer,mockSocketManager:mockManager,restoreManager:restoreManager},canFixtureSocket={Server:src.Server,requestHandlerToListener:store.requestHandlerToListener,storeToListeners:store.storeToListeners};export default canFixtureSocket;
//# sourceMappingURL=can-fixture-socket.js.map
