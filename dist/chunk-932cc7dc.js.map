{"version":3,"file":"chunk-932cc7dc.js","sources":["../node_modules/can-globals/location/location.js"],"sourcesContent":["'use strict';\n\nrequire('can-globals/global/global');\nvar globals = require('can-globals/can-globals-instance');\n\n/**\n * @module {function} can-globals/location/location location\n * @parent can-globals/modules\n * \n * Get the global [`location`](https://developer.mozilla.org/en-US/docs/Web/API/Window/location) object for the current context.\n * \n * @signature `LOCATION([newLocation])`\n * \n * Optionally sets, and returns, the [`location`](https://developer.mozilla.org/en-US/docs/Web/API/Window/location) object for the context.\n * \n * ```js\n * var locationShim = { path: '/' };\n * var LOCATION = require('can-globals/location/location');\n * LOCATION(locationShim);\n * LOCATION().path; // -> '/'\n * ```\n *\n * @param {Object} location An optional location-like object to set as the context's location\n *\n * @return {Object} The location object for this JavaScript environment.\n */\nglobals.define('location', function(){\n\treturn globals.getKeyValue('global').location;\n});\n\nmodule.exports = globals.makeExport('location');\n"],"names":["globals","define","getKeyValue","location","makeExport"],"mappings":"8CA0BAA,QAAQC,OAAO,WAAY,WAC1B,OAAOD,QAAQE,YAAY,UAAUC,WAGtC,eAAiBH,QAAQI,WAAW"}